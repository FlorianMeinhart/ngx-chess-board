{"version":3,"file":"ngx-chess-board.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-chess-board/src/lib/models/pieces/color.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/piece.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/point.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/rook.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/king.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/bishop.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/knight.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/pawn.ts","../../../projects/ngx-chess-board/src/lib/models/pieces/queen.ts","../../../projects/ngx-chess-board/src/lib/utils/unicode-constants.ts","../../../projects/ngx-chess-board/src/lib/engine/board-state-provider/board-loader/notation-processors/fen-loader/default-fen-processor.ts","../../../projects/ngx-chess-board/src/lib/models/move-translation.ts","../../../projects/ngx-chess-board/src/lib/utils/move-utils.ts","../../../projects/ngx-chess-board/src/lib/engine/board-state-provider/board-loader/default-pieces-loader.ts","../../../projects/ngx-chess-board/src/lib/engine/board-state-provider/board-loader/notation-processors/pgn-loader/default-pgn-processor.ts","../../../projects/ngx-chess-board/src/lib/engine/board-state-provider/board-loader/notation-processors/notation-processor-factory.ts","../../../projects/ngx-chess-board/src/lib/engine/drawing-tools/draw-point.ts","../../../projects/ngx-chess-board/src/lib/engine/click/click-utils.ts","../../../projects/ngx-chess-board/src/lib/history-move-provider/history-move.ts","../../../projects/ngx-chess-board/src/lib/history-move-provider/history-move-provider.ts","../../../projects/ngx-chess-board/src/lib/utils/constants.ts","../../../projects/ngx-chess-board/src/lib/utils/inputs/piece-icon-input-manager.ts","../../../projects/ngx-chess-board/src/lib/engine/coords/coords-provider.ts","../../../projects/ngx-chess-board/src/lib/engine/drag/end/default-drag-end-processor.ts","../../../projects/ngx-chess-board/src/lib/engine/drag/end/drag-end-strategy.ts","../../../projects/ngx-chess-board/src/lib/engine/drag/start/default-drag-start-processor.ts","../../../projects/ngx-chess-board/src/lib/engine/drag/start/drag-start-strategy.ts","../../../projects/ngx-chess-board/src/lib/engine/drawing-tools/colors/default-color-processor.ts","../../../projects/ngx-chess-board/src/lib/engine/drawing-tools/colors/color-strategy.ts","../../../projects/ngx-chess-board/src/lib/engine/drawing-tools/draw-provider.ts","../../../projects/ngx-chess-board/src/lib/engine/abstract-engine-facade.ts","../../../projects/ngx-chess-board/src/lib/engine/board-state-provider/board-loader/board-loader.ts","../../../projects/ngx-chess-board/src/lib/engine/board-state-provider/board-state/board-state.ts","../../../projects/ngx-chess-board/src/lib/engine/board-state-provider/board-state/board-state-provider.ts","../../../projects/ngx-chess-board/src/lib/engine/drawing-tools/shapes/arrow.ts","../../../projects/ngx-chess-board/src/lib/engine/drawing-tools/shapes/circle.ts","../../../projects/ngx-chess-board/src/lib/engine/piece-decorator/piece-abstract-decorator.ts","../../../projects/ngx-chess-board/src/lib/engine/piece-decorator/available-move-decorator.ts","../../../projects/ngx-chess-board/src/lib/piece-promotion/piece-promotion-resolver.ts","../../../projects/ngx-chess-board/src/lib/utils/inputs/piece-type-input.ts","../../../projects/ngx-chess-board/src/lib/engine/utils/piece-factory.ts","../../../projects/ngx-chess-board/src/lib/engine/engine-facade.ts","../../../projects/ngx-chess-board/src/lib/models/board.ts","../../../projects/ngx-chess-board/src/lib/service/ngx-chess-board.service.ts","../../../projects/ngx-chess-board/src/lib/ngx-chess-board.component.ts","../../../projects/ngx-chess-board/src/lib/piece-promotion/piece-promotion-modal/piece-promotion-modal.component.ts","../../../projects/ngx-chess-board/src/lib/ngx-chess-board.module.ts","../../../projects/ngx-chess-board/src/public-api.ts","../../../projects/ngx-chess-board/src/ngx-chess-board.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum Color {\r\n    WHITE,\r\n    BLACK,\r\n}\r\n","import { AbstractPiece } from '../../engine/piece-decorator/abstract-piece';\r\nimport { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Point } from './point';\r\n\r\nexport abstract class Piece implements AbstractPiece {\r\n    point: Point;\r\n    color: Color;\r\n    constant: PieceConstant;\r\n    checkPoints: Point[] = [];\r\n    relValue: number;\r\n    board: Board;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        relValue: number,\r\n        board: Board\r\n    ) {\r\n        this.color = color;\r\n        this.constant = constant;\r\n        this.point = point;\r\n        this.relValue = relValue;\r\n        this.board = board;\r\n    }\r\n\r\n    abstract getPossibleMoves(): Point[];\r\n\r\n    abstract getPossibleCaptures(): Point[];\r\n\r\n    abstract getCoveredFields(): Point[]; // zwraca liste punktow ktore sa puste lub istnieje na nich pionek tego samego koloru\r\n}\r\n","export class Point {\n    row: number;\n    col: number;\n\n    constructor(row: number, col: number) {\n        this.row = row;\n        this.col = col;\n    }\n\n    isEqual(that: Point) {\n        return that && this.row === that.row && this.col === that.col;\n    }\n\n    hasCoordsEqual(row: number, col: number) {\n        return row && col && this.row === row && this.col === col;\n    }\n\n    clone() {\n        return new Point(this.row, this.col);\n    }\n}\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { King } from './king';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Rook extends Piece {\r\n    isMovedAlready = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 5, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\nimport { Rook } from './rook';\r\n\r\nexport class King extends Piece {\r\n    castledAlready = false;\r\n    shortCastled = false;\r\n    longCastled = false;\r\n    isMovedAlready;\r\n    isCastling = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 0, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n        // lewo\r\n        if (\r\n            this.board.isFieldEmpty(row, col - 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col - 1));\r\n        }\r\n\r\n        // prawo\r\n        if (\r\n            this.board.isFieldEmpty(row, col + 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col + 1));\r\n        }\r\n\r\n        // dol\r\n        if (\r\n            this.board.isFieldEmpty(row + 1, col) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col));\r\n        }\r\n\r\n        // gora\r\n        if (\r\n            this.board.isFieldEmpty(row - 1, col) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col));\r\n        }\r\n\r\n        // lewo gora\r\n        if (\r\n            this.board.isFieldEmpty(row - 1, col - 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 1));\r\n        }\r\n        // prawo gora\r\n        if (\r\n            this.board.isFieldEmpty(row - 1, col + 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col + 1));\r\n        }\r\n\r\n        // lewo dol\r\n        if (\r\n            this.board.isFieldEmpty(row + 1, col - 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col - 1));\r\n        }\r\n        // prawo dol\r\n        if (\r\n            this.board.isFieldEmpty(row + 1, col + 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col + 1));\r\n        }\r\n\r\n        if (!this.isMovedAlready) {\r\n            let longCastlePossible = true;\r\n            for (let i = col - 1; i > 0; --i) {\r\n                if (\r\n                    !this.board.isFieldEmpty(row, i) ||\r\n                    this.board.isFieldUnderAttack(\r\n                        row,\r\n                        i,\r\n                        this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                    )\r\n                ) {\r\n                    longCastlePossible = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (longCastlePossible && !this.board.isKingInCheck(\r\n                this.color,\r\n                this.board.pieces\r\n            ) && this.board.getPieceByField(row, 0)) {\r\n                const leftRook = this.board.getPieceByField(row, 0);\r\n                if (leftRook instanceof Rook) {\r\n                    if (!leftRook.isMovedAlready) {\r\n                        possiblePoints.push(new Point(row, col - 2));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let shortCastlePossible = true;\r\n            for (let i = col + 1; i < 7; ++i) {\r\n                if (\r\n                    !this.board.isFieldEmpty(row, i) ||\r\n                    this.board.isFieldUnderAttack(\r\n                        row,\r\n                        i,\r\n                        this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                    )\r\n                ) {\r\n                    shortCastlePossible = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (shortCastlePossible && !this.board.isKingInCheck(\r\n                this.color,\r\n                this.board.pieces\r\n            ) && this.board.getPieceByField(row, 7)) {\r\n                const rightRook = this.board.getPieceByField(row, 7);\r\n                if (rightRook instanceof Rook) {\r\n                    if (!rightRook.isMovedAlready) {\r\n                        possiblePoints.push(new Point(row, col + 2));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // lewo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col - 1));\r\n        }\r\n\r\n        // prawo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col + 1));\r\n        }\r\n\r\n        // dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col));\r\n        }\r\n\r\n        // gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col));\r\n        }\r\n\r\n        // lewo gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 1));\r\n        }\r\n        // prawo gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col + 1));\r\n        }\r\n\r\n        // lewo dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col - 1));\r\n        }\r\n        // prawo dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // lewo\r\n        possiblePoints.push(new Point(row, col - 1));\r\n\r\n        // prawo\r\n        possiblePoints.push(new Point(row, col + 1));\r\n\r\n        // dol\r\n        possiblePoints.push(new Point(row + 1, col));\r\n\r\n        // gora\r\n        possiblePoints.push(new Point(row - 1, col));\r\n\r\n        // lewo gora\r\n        possiblePoints.push(new Point(row - 1, col - 1));\r\n\r\n        // prawo gora\r\n        possiblePoints.push(new Point(row - 1, col + 1));\r\n\r\n        // lewo dol\r\n        possiblePoints.push(new Point(row + 1, col - 1));\r\n\r\n        // prawo dol\r\n        possiblePoints.push(new Point(row + 1, col + 1));\r\n\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { King } from './king';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Bishop extends Piece {\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 3, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures() {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Knight extends Piece {\r\n    isMovedAlready = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 3, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // gora -> lewo\r\n        if (this.board.isFieldEmpty(row - 2, col - 1)) {\r\n            possiblePoints.push(new Point(row - 2, col - 1));\r\n        }\r\n\r\n        // gora -> prawo\r\n        if (this.board.isFieldEmpty(row - 2, col + 1)) {\r\n            possiblePoints.push(new Point(row - 2, col + 1));\r\n        }\r\n\r\n        // lewo -> gora\r\n        if (this.board.isFieldEmpty(row - 1, col - 2)) {\r\n            possiblePoints.push(new Point(row - 1, col - 2));\r\n        }\r\n\r\n        // prawo -> gora\r\n        if (this.board.isFieldEmpty(row - 1, col + 2)) {\r\n            possiblePoints.push(new Point(row - 1, col + 2));\r\n        }\r\n\r\n        // lewo -> dol\r\n        if (this.board.isFieldEmpty(row + 1, col - 2)) {\r\n            possiblePoints.push(new Point(row + 1, col - 2));\r\n        }\r\n\r\n        // prawo -> dol\r\n        if (this.board.isFieldEmpty(row + 1, col + 2)) {\r\n            possiblePoints.push(new Point(row + 1, col + 2));\r\n        }\r\n\r\n        // dol -> lewo\r\n        if (this.board.isFieldEmpty(row + 2, col - 1)) {\r\n            possiblePoints.push(new Point(row + 2, col - 1));\r\n        }\r\n\r\n        // dol -> prawo\r\n        if (this.board.isFieldEmpty(row + 2, col + 1)) {\r\n            possiblePoints.push(new Point(row + 2, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // gora -> lewo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 2,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 2, col - 1));\r\n        }\r\n\r\n        // gora -> prawo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 2,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 2, col + 1));\r\n        }\r\n\r\n        // lewo -> gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col - 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 2));\r\n        }\r\n\r\n        // prawo -> gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col + 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col + 2));\r\n        }\r\n\r\n        // lewo -> dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col - 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col - 2));\r\n        }\r\n\r\n        // prawo -> dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col + 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col + 2));\r\n        }\r\n\r\n        // dol -> lewo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 2,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 2, col - 1));\r\n        }\r\n\r\n        // dol -> prawo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 2,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 2, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // gora -> lewo\r\n        possiblePoints.push(new Point(row - 2, col - 1));\r\n\r\n        // gora -> prawo\r\n        possiblePoints.push(new Point(row - 2, col + 1));\r\n\r\n        // lewo -> gora\r\n        possiblePoints.push(new Point(row - 1, col - 2));\r\n\r\n        // prawo -> gora\r\n        possiblePoints.push(new Point(row - 1, col + 2));\r\n\r\n        // lewo -> dol\r\n        possiblePoints.push(new Point(row + 1, col - 2));\r\n\r\n        // prawo -> dol\r\n        possiblePoints.push(new Point(row + 1, col + 2));\r\n\r\n        // dol -> lewo\r\n        possiblePoints.push(new Point(row + 2, col - 1));\r\n\r\n        // dol -> prawo\r\n        possiblePoints.push(new Point(row + 2, col + 1));\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Pawn extends Piece {\r\n    isMovedAlready = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 1, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n        if (\r\n            (!this.board.reverted && this.color === Color.WHITE) ||\r\n            (this.board.reverted && this.color === Color.BLACK)\r\n        ) {\r\n            if (this.board.isFieldEmpty(row - 1, col)) {\r\n                possiblePoints.push(new Point(row - 1, col));\r\n\r\n                if (\r\n                    !this.isMovedAlready &&\r\n                    this.board.isFieldEmpty(row - 2, col)\r\n                ) {\r\n                    possiblePoints.push(new Point(row - 2, col));\r\n                }\r\n            }\r\n        } else {\r\n            if (\r\n                /*!board.isFieldTakenByEnemy(row + 1, col, Color.WHITE) &&*/ this.board.isFieldEmpty(\r\n                    row + 1,\r\n                    col\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row + 1, col));\r\n\r\n                if (\r\n                    !this.isMovedAlready &&\r\n                    this.board.isFieldEmpty(row + 2, col)\r\n                ) {\r\n                    possiblePoints.push(new Point(row + 2, col));\r\n                }\r\n            }\r\n        }\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        if (\r\n            (!this.board.reverted && this.color === Color.WHITE) ||\r\n            (this.board.reverted && this.color === Color.BLACK)\r\n        ) {\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row - 1,\r\n                    col - 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row - 1, col - 1));\r\n            }\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row - 1,\r\n                    col + 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row - 1, col + 1));\r\n            }\r\n        } else {\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row + 1,\r\n                    col - 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row + 1, col - 1));\r\n            }\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row + 1,\r\n                    col + 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row + 1, col + 1));\r\n            }\r\n        }\r\n\r\n        if (\r\n            this.board.enPassantPoint &&\r\n            this.board.enPassantPiece.color ===\r\n                (this.color === Color.WHITE ? Color.BLACK : Color.WHITE)\r\n        ) {\r\n            if (\r\n                row === this.board.enPassantPiece.point.row &&\r\n                Math.abs(this.board.enPassantPiece.point.col - col) === 1\r\n            ) {\r\n                possiblePoints.push(this.board.enPassantPoint);\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        if (\r\n            (!this.board.reverted && this.color === Color.WHITE) ||\r\n            (this.board.reverted && this.color === Color.BLACK)\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 1));\r\n\r\n            possiblePoints.push(new Point(row - 1, col + 1));\r\n        } else {\r\n            possiblePoints.push(new Point(row + 1, col - 1));\r\n\r\n            possiblePoints.push(new Point(row + 1, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { King } from './king';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Queen extends Piece {\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 9, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, col) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, col) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(row, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(row, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","export interface PieceConstant {\r\n    name: string;\r\n    icon: string;\r\n}\r\n\r\nexport const UnicodeConstants = {\r\n    WHITE_KING: { name: 'King', icon: '&#x2654;' },\r\n    WHITE_QUEEN: { name: 'Queen', icon: '&#x2655;' },\r\n    WHITE_KNIGHT: { name: 'Knight', icon: '&#x2658' },\r\n    WHITE_ROOK: { name: 'Rook', icon: '&#x2656' },\r\n    WHITE_PAWN: { name: 'Pawn', icon: '&#x2659' },\r\n    WHITE_BISHOP: { name: 'Bishop', icon: '&#x2657' },\r\n\r\n    BLACK_KING: { name: 'King', icon: '&#x265A' },\r\n    BLACK_QUEEN: { name: 'Queen', icon: '&#x265B' },\r\n    BLACK_KNIGHT: { name: 'Knight', icon: '&#x265E' },\r\n    BLACK_ROOK: { name: 'Rook', icon: '&#x265C' },\r\n    BLACK_PAWN: { name: 'Pawn', icon: '&#x265F' },\r\n    BLACK_BISHOP: { name: 'Bishop', icon: '&#x265D' },\r\n};\r\n","import { Board } from '../../../../../models/board';\nimport { Bishop } from '../../../../../models/pieces/bishop';\nimport { Color } from '../../../../../models/pieces/color';\nimport { King } from '../../../../../models/pieces/king';\nimport { Knight } from '../../../../../models/pieces/knight';\nimport { Pawn } from '../../../../../models/pieces/pawn';\nimport { Point } from '../../../../../models/pieces/point';\nimport { Queen } from '../../../../../models/pieces/queen';\nimport { Rook } from '../../../../../models/pieces/rook';\nimport { UnicodeConstants } from '../../../../../utils/unicode-constants';\nimport { AbstractEngineFacade } from '../../../../abstract-engine-facade';\nimport { NotationProcessor } from '../notation-processor';\n\nexport class DefaultFenProcessor implements NotationProcessor {\n\n    public process(notation: string, engineFacade: AbstractEngineFacade): void {\n        let fen = notation;\n        if (notation) {\n            engineFacade.board.reverted = false;\n            engineFacade.board.pieces = [];\n            const split = fen.split('/');\n            for (let i = 0; i < 8; ++i) {\n                let pointer = 0;\n                for (let j = 0; j < 8; ++j) {\n                    const chunk = split[i].charAt(j);\n                    if (chunk.match(/[0-9]/)) {\n                        pointer += Number(chunk);\n                    } else {\n                        switch (chunk) {\n                            case 'r':\n                                engineFacade.board.pieces.push(\n                                    new Rook(\n                                        new Point(i, pointer),\n                                        Color.BLACK,\n                                        UnicodeConstants.BLACK_ROOK,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n                            case 'n':\n                                engineFacade.board.pieces.push(\n                                    new Knight(\n                                        new Point(i, pointer),\n                                        Color.BLACK,\n                                        UnicodeConstants.BLACK_KNIGHT,\n                                        engineFacade.board\n                                    )\n                                );\n\n                                break;\n                            case 'b':\n                                engineFacade.board.pieces.push(\n                                    new Bishop(\n                                        new Point(i, pointer),\n                                        Color.BLACK,\n                                        UnicodeConstants.BLACK_BISHOP,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n                            case 'q':\n                                engineFacade.board.pieces.push(\n                                    new Queen(\n                                        new Point(i, pointer),\n                                        Color.BLACK,\n                                        UnicodeConstants.BLACK_QUEEN,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n                            case 'k':\n                                engineFacade.board.pieces.push(\n                                    new King(\n                                        new Point(i, pointer),\n                                        Color.BLACK,\n                                        UnicodeConstants.BLACK_KING,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n                            case 'p': {\n                                const pawn = new Pawn(\n                                    new Point(i, pointer),\n                                    Color.BLACK,\n                                    UnicodeConstants.BLACK_PAWN,\n                                    engineFacade.board\n                                );\n                                if (\n                                    (pawn.color === Color.BLACK && pawn.point.row !== 1) ||\n                                    (pawn.color === Color.WHITE && pawn.point.row !== 6)\n                                ) {\n                                    pawn.isMovedAlready = true;\n                                }\n                                engineFacade.board.pieces.push(pawn);\n                                break;\n                            }\n                            case 'R':\n                                engineFacade.board.pieces.push(\n                                    new Rook(\n                                        new Point(i, pointer),\n                                        Color.WHITE,\n                                        UnicodeConstants.WHITE_ROOK,\n                                        engineFacade.board\n                                    )\n                                );\n\n                                break;\n                            case 'N':\n                                engineFacade.board.pieces.push(\n                                    new Knight(\n                                        new Point(i, pointer),\n                                        Color.WHITE,\n                                        UnicodeConstants.WHITE_KNIGHT,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n\n                            case 'B':\n                                engineFacade.board.pieces.push(\n                                    new Bishop(\n                                        new Point(i, pointer),\n                                        Color.WHITE,\n                                        UnicodeConstants.WHITE_BISHOP,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n\n                            case 'Q':\n                                engineFacade.board.pieces.push(\n                                    new Queen(\n                                        new Point(i, pointer),\n                                        Color.WHITE,\n                                        UnicodeConstants.WHITE_QUEEN,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n\n                            case 'K':\n                                engineFacade.board.pieces.push(\n                                    new King(\n                                        new Point(i, pointer),\n                                        Color.WHITE,\n                                        UnicodeConstants.WHITE_KING,\n                                        engineFacade.board\n                                    )\n                                );\n                                break;\n\n                            case 'P': {\n                                const pawn = new Pawn(\n                                    new Point(i, pointer),\n                                    Color.WHITE,\n                                    UnicodeConstants.WHITE_PAWN,\n                                    engineFacade.board\n                                );\n                                if (\n                                    (pawn.color === Color.BLACK && pawn.point.row !== 1) ||\n                                    (pawn.color === Color.WHITE && pawn.point.row !== 6)\n                                ) {\n                                    pawn.isMovedAlready = true;\n                                }\n                                engineFacade.board.pieces.push(pawn);\n                                break;\n                            }\n                        }\n                        ++pointer;\n                    }\n                }\n            }\n\n            this.setCurrentPlayer(engineFacade.board, fen);\n            this.setCastles(engineFacade.board, fen);\n            this.setEnPassant(fen);\n            this.setFullMoveCount(fen);\n            engineFacade.board.fen = fen;\n        } else {\n            throw Error('Incorrect FEN provided');\n        }\n    }\n\n\n    private setCurrentPlayer(board: Board, fen: string) {\n        if (fen) {\n            const split = fen.split(' ');\n            board.currentWhitePlayer = split[1] === 'w';\n        }\n    }\n\n    private setCastles(board: Board, fen: string) {\n        if (fen) {\n            const split = fen.split(' ');\n            const castleChunk = split[2];\n\n            if (!castleChunk.includes('K')) {\n                this.setRookAlreadyMoved(board, Color.WHITE, 7);\n            }\n\n            if (!castleChunk.includes('Q')) {\n                this.setRookAlreadyMoved(board, Color.WHITE, 0);\n            }\n\n            if (!castleChunk.includes('k')) {\n                this.setRookAlreadyMoved(board, Color.BLACK, 7);\n            }\n\n            if (!castleChunk.includes('q')) {\n                this.setRookAlreadyMoved(board, Color.BLACK, 0);\n            }\n        }\n    }\n\n    private setFullMoveCount(fen: string) {}\n\n    private setEnPassant(fen: string) {\n        if (fen) {\n            const split = fen.split(' ');\n            const enPassantPoint = split[3];\n\n            if (enPassantPoint === '-') {\n                return;\n            }\n\n            // if()\n        }\n    }\n\n    private setRookAlreadyMoved(board: Board, color: Color, col: number) {\n        const rook = board.pieces.find(\n            (piece) => piece.color === color && piece instanceof Rook && piece.point.col === col\n        ) as Rook;\n\n        if (rook) {\n            rook.isMovedAlready = true;\n        }\n    }\n\n}\n","export class MoveTranslation {\r\n    private _xAxis: number;\r\n    private _yAxis: number;\r\n    private _reverted: boolean;\r\n\r\n    constructor(xAxis: number, yAxis: number, reverted: boolean) {\r\n        this._xAxis = xAxis;\r\n        this._yAxis = yAxis;\r\n        this._reverted = reverted;\r\n    }\r\n\r\n    get xAxis(): number {\r\n        return this._xAxis;\r\n    }\r\n\r\n    set xAxis(value: number) {\r\n        this._xAxis = value;\r\n    }\r\n\r\n    get yAxis(): number {\r\n        return this._yAxis;\r\n    }\r\n\r\n    set yAxis(value: number) {\r\n        this._yAxis = value;\r\n    }\r\n\r\n    get reverted(): boolean {\r\n        return this._reverted;\r\n    }\r\n\r\n    set reverted(value: boolean) {\r\n        this._reverted = value;\r\n    }\r\n}\r\n","import { Board } from '../models/board';\nimport { Color } from '../models/pieces/color';\nimport { King } from '../models/pieces/king';\nimport { Knight } from '../models/pieces/knight';\nimport { Piece } from '../models/pieces/piece';\nimport { Point } from '../models/pieces/point';\nimport { MoveTranslation } from '../models/move-translation';\n\nexport class MoveUtils {\n    public static willMoveCauseCheck(\n        currentColor: Color,\n        row: number,\n        col: number,\n        destRow: number,\n        destCol: number,\n        board: Board\n    ) {\n        const srcPiece = board.getPieceByField(row, col);\n        const destPiece = board.getPieceByField(destRow, destCol);\n\n        if (srcPiece) {\n            srcPiece.point.row = destRow;\n            srcPiece.point.col = destCol;\n        }\n\n        if (destPiece) {\n            board.pieces = board.pieces.filter((piece) => piece !== destPiece);\n        }\n        const isBound = board.isKingInCheck(currentColor, board.pieces);\n\n        if (srcPiece) {\n            srcPiece.point.col = col;\n            srcPiece.point.row = row;\n        }\n\n        if (destPiece) {\n            board.pieces.push(destPiece);\n        }\n\n        return isBound;\n    }\n\n    public static format(\n        sourcePoint: Point,\n        destPoint: Point,\n        reverted: boolean\n    ) {\n        if (reverted) {\n            const sourceX = 104 - sourcePoint.col;\n            const destX = 104 - destPoint.col;\n            return (\n                String.fromCharCode(sourceX) +\n                (sourcePoint.row + 1) +\n                String.fromCharCode(destX) +\n                (destPoint.row + 1)\n            );\n        } else {\n            const incrementX = 97;\n            return (\n                String.fromCharCode(sourcePoint.col + incrementX) +\n                (Math.abs(sourcePoint.row - 7) + 1) +\n                String.fromCharCode(destPoint.col + incrementX) +\n                (Math.abs(destPoint.row - 7) + 1)\n            );\n        }\n    }\n\n    public static translateCoordsToIndex(coords: string, reverted: boolean) {\n        let xAxis: number;\n        let yAxis: number;\n        if (reverted) {\n            xAxis = 104 - coords.charCodeAt(0);\n            yAxis = +coords.charAt(1) - 1;\n        } else {\n            xAxis = coords.charCodeAt(0) - 97;\n            yAxis = Math.abs(+coords.charAt(1) - 8);\n        }\n\n        return new MoveTranslation(xAxis, yAxis, reverted);\n    }\n\n    public static findPieceByPossibleMovesContaining(\n        coords: string,\n        board: Board,\n        color: Color\n    ): Piece[] {\n        let indexes = this.translateCoordsToIndex(coords, board.reverted);\n        let destPoint = new Point(indexes.yAxis, indexes.xAxis);\n        let foundPieces = [];\n\n        for (let piece of board.pieces.filter(piece => piece.color === color)) {\n            for (let point of piece.getPossibleMoves()) {\n                if (!MoveUtils.willMoveCauseCheck(\n                    piece.color,\n                    piece.point.row,\n                    piece.point.col,\n                    indexes.yAxis,\n                    indexes.xAxis,\n                    board\n                ) && point.isEqual(destPoint)) {\n                    foundPieces.push(piece);\n                }\n            }\n        }\n        if (foundPieces.length === 0) {\n            console.log(coords + ' debug');\n        }\n        return foundPieces;\n    }\n\n    public static findPieceByPossibleCapturesContaining(\n        coords: string,\n        board: Board,\n        color: Color\n    ): Piece[] {\n        let indexes = this.translateCoordsToIndex(coords, board.reverted);\n        let destPoint = new Point(indexes.yAxis, indexes.xAxis);\n        let foundPieces = [];\n        for (let piece of board.pieces.filter(piece => piece.color === color)) {\n            for (let point of piece.getPossibleCaptures()) {\n                if (!MoveUtils.willMoveCauseCheck(\n                    piece.color,\n                    piece.point.row,\n                    piece.point.col,\n                    indexes.yAxis,\n                    indexes.xAxis,\n                    board\n                ) && point.isEqual(destPoint)) {\n                    foundPieces.push(piece);\n                }\n            }\n        }\n        if (foundPieces.length === 0) {\n            console.log(coords + ' debug');\n        }\n\n        return foundPieces;\n    }\n\n    public static formatSingle(point: Point, reverted: boolean): string {\n        if (reverted) {\n            const sourceX = 104 - point.col;\n            return (\n                String.fromCharCode(sourceX) +\n                (point.row + 1)\n            );\n        } else {\n            const incrementX = 97;\n            return (\n                String.fromCharCode(point.col + incrementX) +\n                (Math.abs(point.row - 7) + 1)\n            );\n        }\n    }\n\n}\n","import { Board } from '../../../models/board';\nimport { Bishop } from '../../../models/pieces/bishop';\nimport { Color } from '../../../models/pieces/color';\nimport { King } from '../../../models/pieces/king';\nimport { Knight } from '../../../models/pieces/knight';\nimport { Pawn } from '../../../models/pieces/pawn';\nimport { Point } from '../../../models/pieces/point';\nimport { Queen } from '../../../models/pieces/queen';\nimport { Rook } from '../../../models/pieces/rook';\nimport { UnicodeConstants } from '../../../utils/unicode-constants';\n\nexport class DefaultPiecesLoader {\n\n    static loadDefaultPieces(board: Board) {\n        board.pieces = [];\n        // piony czarne\n        for (let i = 0; i < 8; ++i) {\n            board.pieces.push(new Pawn(\n                new Point(1, i),\n                Color.BLACK,\n                UnicodeConstants.BLACK_PAWN,\n                board\n            ));\n        }\n        board.pieces.push(new Rook(\n            new Point(0, 0),\n            Color.BLACK,\n            UnicodeConstants.BLACK_ROOK,\n            board\n        ));\n        board.pieces.push(new Knight(\n            new Point(0, 1),\n            Color.BLACK,\n            UnicodeConstants.BLACK_KNIGHT,\n            board\n        ));\n        board.pieces.push(new Bishop(\n            new Point(0, 2),\n            Color.BLACK,\n            UnicodeConstants.BLACK_BISHOP,\n            board\n        ));\n        board.pieces.push(new Queen(\n            new Point(0, 3),\n            Color.BLACK,\n            UnicodeConstants.BLACK_QUEEN,\n            board\n        ));\n        board.pieces.push(new King(\n            new Point(0, 4),\n            Color.BLACK,\n            UnicodeConstants.BLACK_KING,\n            board\n        ));\n        board.pieces.push(new Bishop(\n            new Point(0, 5),\n            Color.BLACK,\n            UnicodeConstants.BLACK_BISHOP,\n            board\n        ));\n        board.pieces.push(new Knight(\n            new Point(0, 6),\n            Color.BLACK,\n            UnicodeConstants.BLACK_KNIGHT,\n            board\n        ));\n        board.pieces.push(new Rook(\n            new Point(0, 7),\n            Color.BLACK,\n            UnicodeConstants.BLACK_ROOK,\n            board\n        ));\n\n        // piony biale\n        for (let i = 0; i < 8; ++i) {\n            board.pieces.push(new Pawn(\n                new Point(6, i),\n                Color.WHITE,\n                UnicodeConstants.WHITE_PAWN,\n                board\n            ));\n        }\n        board.pieces.push(new Rook(\n            new Point(7, 0),\n            Color.WHITE,\n            UnicodeConstants.WHITE_ROOK,\n            board\n        ));\n        board.pieces.push(new Knight(\n            new Point(7, 1),\n            Color.WHITE,\n            UnicodeConstants.WHITE_KNIGHT,\n            board\n        ));\n        board.pieces.push(new Bishop(\n            new Point(7, 2),\n            Color.WHITE,\n            UnicodeConstants.WHITE_BISHOP,\n            board\n        ));\n        board.pieces.push(new Queen(\n            new Point(7, 3),\n            Color.WHITE,\n            UnicodeConstants.WHITE_QUEEN,\n            board\n        ));\n        board.pieces.push(new King(\n            new Point(7, 4),\n            Color.WHITE,\n            UnicodeConstants.WHITE_KING,\n            board\n        ));\n        board.pieces.push(new Bishop(\n            new Point(7, 5),\n            Color.WHITE,\n            UnicodeConstants.WHITE_BISHOP,\n            board\n        ));\n        board.pieces.push(new Knight(\n            new Point(7, 6),\n            Color.WHITE,\n            UnicodeConstants.WHITE_KNIGHT,\n            board\n        ));\n        board.pieces.push(new Rook(\n            new Point(7, 7),\n            Color.WHITE,\n            UnicodeConstants.WHITE_ROOK,\n            board\n        ));\n\n        board.calculateFEN();\n\n    }\n\n}\n","import { Board } from '../../../../../models/board';\nimport { Bishop } from '../../../../../models/pieces/bishop';\nimport { Color } from '../../../../../models/pieces/color';\nimport { King } from '../../../../../models/pieces/king';\nimport { Knight } from '../../../../../models/pieces/knight';\nimport { Pawn } from '../../../../../models/pieces/pawn';\nimport { Piece } from '../../../../../models/pieces/piece';\nimport { Point } from '../../../../../models/pieces/point';\nimport { Queen } from '../../../../../models/pieces/queen';\nimport { Rook } from '../../../../../models/pieces/rook';\nimport { MoveUtils } from '../../../../../utils/move-utils';\nimport { AbstractEngineFacade } from '../../../../abstract-engine-facade';\nimport { DefaultPiecesLoader } from '../../default-pieces-loader';\nimport { NotationProcessor } from '../notation-processor';\n\nexport class DefaultPgnProcessor implements NotationProcessor {\n\n    public process(notation: string, engineFacade: AbstractEngineFacade): void {\n        if (notation) {\n            engineFacade.board.reverted = false;\n            engineFacade.board.pieces = [];\n            engineFacade.reset();\n            DefaultPiecesLoader.loadDefaultPieces(engineFacade.board);\n            let moves = this.extractMoves(notation);\n            let counter = -1;\n            for (let move of moves) {\n                ++counter;\n                move = move.replace(/[+#]/g, '');\n                let promotionIndex = '';\n\n                if (move.includes('=')) {\n                    promotionIndex = this.resolvePromotion(move.substring(move.length - 1));\n                    move = move.substring(0, move.length - 2);\n                }\n\n                let color = (counter === 0 || counter % 2 === 0)\n                    ? Color.WHITE\n                    : Color.BLACK;\n\n                if (/^[a-z]\\d$/g.test(move)) { // zwykly ruch na wolne pole e4\n                    let piece = MoveUtils.findPieceByPossibleMovesContaining(\n                        move,\n                        engineFacade.board,\n                        color\n                    ).find(piece => piece instanceof Pawn);\n                    if (piece) {\n                        engineFacade.move(MoveUtils.formatSingle(\n                            piece.point,\n                            false\n                        ) + move + promotionIndex);\n                    } else {\n                    }\n                } else {\n                    if (/^[A-Z][a-h]\\d$/g.test(move)) {// jezeli ma wielka litere, czyli trzeba odszukac ktora figura Nf3\n                        let pieces = MoveUtils.findPieceByPossibleMovesContaining(\n                            move.substring(1),\n                            engineFacade.board,\n                            color\n                        );\n                        let piece = pieces.find(piece => this.resolvePieceByFirstChar(\n                            move.charAt(0),\n                            piece\n                        ));\n                        if (piece) {\n                            engineFacade.move(MoveUtils.formatSingle(\n                                piece.point,\n                                false\n                            ) + move.substring(1) + promotionIndex);\n                        } else {\n                        }\n                    } else {\n                        if ('O-O' === move) {\n                            engineFacade.move(color === Color.WHITE ? 'e1g1' : 'e8g8');\n                        } else {\n                            if (/^[a-z]x[a-z]\\d$/g.test(move)) { //exd5\n                                let pieces = MoveUtils.findPieceByPossibleCapturesContaining(\n                                    move.substring(move.indexOf('x') + 1),\n                                    engineFacade.board,\n                                    color\n                                ).filter(piece => piece instanceof Pawn);\n\n                                let piece;\n                                if (pieces.length > 1) {\n                                    piece = this.resolveByCol(\n                                        pieces,\n                                        move.substring(0, 1)\n                                    );\n                                } else {\n                                    piece = pieces[0];\n                                }\n\n                                if (piece) {\n                                    engineFacade.move(MoveUtils.formatSingle(\n                                        piece.point,\n                                        false\n                                    ) + move.substring(move.indexOf('x') + 1) + promotionIndex);\n                                } else {\n                                }\n                            } else {\n                                if (/^[A-Z]x[a-z]\\d$/g.test(move)) {\n                                    let piece = MoveUtils.findPieceByPossibleCapturesContaining(\n                                        move.substring(move.indexOf('x') + 1),\n                                        engineFacade.board,\n                                        color\n                                    ).find(piece => this.resolvePieceByFirstChar(\n                                        move.substring(0, 1),\n                                        piece\n                                    ));\n                                    if (piece) {\n                                        engineFacade.move(MoveUtils.formatSingle(\n                                            piece.point,\n                                            false\n                                        ) + move.substring(move.indexOf('x') + 1) + promotionIndex);\n                                    } else {\n                                    }\n                                } else {\n                                    if (move === 'O-O-O') {\n                                        engineFacade.move(color === Color.WHITE ? 'e1c1' : 'e8c8');\n                                    } else {\n                                        if (/^[A-Z]\\dx[a-z]\\d$/g.test(move)) {  //Ngxe4 sytuacja 2 skoczkow pion bicie\n                                            let pieces = MoveUtils.findPieceByPossibleCapturesContaining(\n                                                move.substring(move.indexOf('x') + 1),\n                                                engineFacade.board,\n                                                color\n                                            ).filter(piece => this.resolvePieceByFirstChar(\n                                                move.charAt(0),\n                                                piece\n                                            ));\n\n                                            let piece = this.resolveByRow(\n                                                pieces,\n                                                move.substring(1, 2)\n                                            );\n\n                                            if (piece) {\n                                                engineFacade.move(MoveUtils.formatSingle(\n                                                    piece.point,\n                                                    false\n                                                ) + move.substring(move.indexOf(\n                                                    'x') + 1) + promotionIndex);\n                                            }\n                                        } else {\n                                            if (/^[A-Z][a-z][a-z]\\d$/g.test(move)) { // dwie wieze bez bicia Rac1 pion\n                                                let pieces = MoveUtils.findPieceByPossibleMovesContaining(\n                                                    move.substring(2, 4),\n                                                    engineFacade.board,\n                                                    color\n                                                ).filter(piece => this.resolvePieceByFirstChar(\n                                                    move.charAt(0),\n                                                    piece\n                                                ));\n\n                                                let piece = this.resolveByCol(\n                                                    pieces,\n                                                    move.substring(1, 2)\n                                                );\n\n                                                if (piece) {\n                                                    engineFacade.move(MoveUtils.formatSingle(\n                                                        piece.point,\n                                                        false\n                                                    ) + move.substring(\n                                                        2,\n                                                        4\n                                                    ) + promotionIndex);\n                                                }\n                                            } else {\n                                                if (/^[A-Z][a-z]x[a-z]\\d$/g.test(\n                                                    move)) {\n                                                    let pieces = MoveUtils.findPieceByPossibleCapturesContaining(\n                                                        move.substring(move.indexOf(\n                                                            'x') + 1),\n                                                        engineFacade.board,\n                                                        color\n                                                    ).filter(piece => this.resolvePieceByFirstChar(\n                                                        move.charAt(0),\n                                                        piece\n                                                    ));\n\n                                                    let piece = this.resolveByCol(\n                                                        pieces,\n                                                        move.substring(1, 2)\n                                                    );\n\n                                                    if (piece) {\n                                                        engineFacade.move(\n                                                            MoveUtils.formatSingle(\n                                                                piece.point,\n                                                                false\n                                                            ) + move.substring(\n                                                            move.indexOf(\n                                                                'x') + 1) + promotionIndex);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    protected extractMoves(notation: string) {\n        return notation.substring(notation.lastIndexOf(']') + 1)\n            .replace(/[0-9]+\\./g, '')\n            .replace(/\\s+/g, ' ')\n            .replace(/{[^}]*}/g, '')\n            .trim()\n            .split(' ')\n            .filter(s => s);\n    }\n\n    protected movePiece(piece: Piece, board: Board, move: string) {\n        let indexes = MoveUtils.translateCoordsToIndex(move, board.reverted);\n        piece.point.col = indexes.xAxis;\n        piece.point.row = indexes.yAxis;\n    }\n\n    hasUpperCase(move: string) {\n        return /[A-Z]/.test(move);\n    }\n\n    private resolvePieceByFirstChar(move: string, piece: Piece) {\n        let piecesFirstChar = '';\n        if (piece instanceof King) {\n            piecesFirstChar = 'K';\n        } else {\n            if (piece instanceof Queen) {\n                piecesFirstChar = 'Q';\n            } else {\n                if (piece instanceof Rook) {\n                    piecesFirstChar = 'R';\n                } else {\n                    if (piece instanceof Bishop) {\n                        piecesFirstChar = 'B';\n                    } else {\n                        if (piece instanceof Knight) {\n                            piecesFirstChar = 'N';\n                        } else {\n                            if (piece instanceof Pawn) {\n                                piecesFirstChar = 'P';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return move === piecesFirstChar;\n    }\n\n    private isShortCastle(move: string) {\n        return move === 'O-O';\n    }\n\n    private removePiece(coords: string, board: Board) {\n        let indexes = MoveUtils.translateCoordsToIndex(coords, board.reverted);\n\n        board.pieces = board.pieces.filter(e => !e.point.isEqual(new Point(\n            indexes.yAxis,\n            indexes.xAxis\n        )));\n    }\n\n    private isLongCastle(move: string) {\n        return move === 'O-O-O';\n    }\n\n    private resolveByCol(pieces: Piece[], char: string): Piece {\n        let firstPieceFormat = MoveUtils.formatSingle(pieces[0].point, false);\n        let secondPieceFormat = MoveUtils.formatSingle(pieces[1].point, false);\n        return firstPieceFormat.substring(0, 1) === char\n            ? pieces[0]\n            : pieces[1];\n    }\n\n    private resolveByRow(pieces: Piece[], char: string) {\n        let firstPieceFormat = MoveUtils.formatSingle(pieces[0].point, false);\n        let secondPieceFormat = MoveUtils.formatSingle(pieces[1].point, false);\n        return firstPieceFormat.substring(1, 2) === char\n            ? pieces[0]\n            : pieces[1];\n    }\n\n    private replacePromotion(move: string) {\n        return move\n            .replace('=Q', '1')\n            .replace('=R', '2')\n            .replace('=B', '3')\n            .replace('=K', '4');\n    }\n\n    private resolvePromotion(promotionChar: string) {\n        switch (promotionChar) {\n            case 'Q':\n                return '1';\n            case 'R':\n                return '2';\n            case 'B':\n                return '3';\n            case 'N':\n                return '4';\n        }\n        return '';\n    }\n}\n","import { NotationProcessor } from './notation-processor';\nimport {\n    DefaultFenProcessor,\n} from './fen-loader/default-fen-processor';\nimport { DefaultPgnProcessor } from './pgn-loader/default-pgn-processor';\n\nexport class NotationProcessorFactory {\n\n    static getProcessor(type: NotationType): NotationProcessor {\n        switch (type) {\n            case NotationType.FEN:\n                return new DefaultFenProcessor();\n\n            case NotationType.PGN:\n                return new DefaultPgnProcessor();\n\n        }\n    }\n\n    static getDefaultProcessor(): NotationProcessor {\n        return new DefaultFenProcessor();\n    }\n\n}\n\nexport enum NotationType {\n    FEN = 1,\n    PGN = 2\n}\n","export class DrawPoint {\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n\r\n    constructor(x: number, y: number, color: string) {\r\n        this.x = x + 0.5;\r\n        this.y = y + 0.5;\r\n        this.color = color;\r\n    }\r\n\r\n    isEqual(that: DrawPoint) {\r\n        return that && that.x === this.x && this.y === that.y;\r\n    }\r\n}\r\n","import { Point } from '../../models/pieces/point';\r\nimport { ColorStrategy } from '../drawing-tools/colors/color-strategy';\r\nimport { DrawPoint } from '../drawing-tools/draw-point';\r\n\r\nexport class ClickUtils {\r\n\r\n    static getClickPoint(\r\n        event: any,\r\n        top: number,\r\n        height: number,\r\n        left: number,\r\n        width: number\r\n    ) {\r\n        return new Point(\r\n            Math.floor((event.y - top) / (height / 8)),\r\n            Math.floor((event.x - left) / (width / 8)\r\n            )\r\n        );\r\n    }\r\n\r\n    static getDrawingPoint(\r\n        tileSize: number,\r\n        colorStrategy: ColorStrategy,\r\n        x: number,\r\n        y: number,\r\n        ctrl: boolean,\r\n        alt: boolean,\r\n        shift: boolean,\r\n        xAxis: number,\r\n        yAxis: number\r\n    ) {\r\n        const squareSize = tileSize / 8;\r\n        const xx = Math.floor(\r\n            (x - xAxis) /\r\n            squareSize\r\n        );\r\n        const yy = Math.floor(\r\n            (y - yAxis) /\r\n            squareSize\r\n        );\r\n\r\n        let color = colorStrategy.resolve(ctrl, shift, alt);\r\n\r\n        return new DrawPoint(\r\n            Math.floor(xx * squareSize + squareSize / 2),\r\n            Math.floor(yy * squareSize + squareSize / 2),\r\n            color\r\n        );\r\n    }\r\n\r\n}\r\n","export class HistoryMove {\r\n    move: string;\r\n    piece: string;\r\n    color: string;\r\n    x: boolean;\r\n\r\n    constructor(move: string, piece: string, color: string, captured: boolean) {\r\n        this.move = move;\r\n        this.piece = piece;\r\n        this.color = color;\r\n        this.x = captured;\r\n    }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { HistoryMove } from './history-move';\r\n\r\nexport class HistoryMoveProvider {\r\n    historyMovesSubject$ = new BehaviorSubject<HistoryMove[]>([]);\r\n\r\n    get historyMoves(): HistoryMove[] {\r\n        return this.historyMovesSubject$.value;\r\n    }\r\n\r\n    set historyMoves(states: HistoryMove[]) {\r\n        this.historyMovesSubject$.next(states);\r\n    }\r\n\r\n    addMove(historyMove: HistoryMove) {\r\n        this.historyMoves = [...this.historyMoves, historyMove];\r\n    }\r\n\r\n    pop(): HistoryMove {\r\n        const lastHistoryMove = this.getLastMove();\r\n        this.historyMoves = this.historyMoves.filter(\r\n            (state) => state !== lastHistoryMove\r\n        );\r\n        return lastHistoryMove;\r\n    }\r\n\r\n    getAll() {\r\n        return this.historyMoves;\r\n    }\r\n\r\n    clear() {\r\n        this.historyMoves = [];\r\n    }\r\n\r\n    getLastMove() {\r\n        return this.historyMoves[this.getLastMoveIndex()];\r\n    }\r\n\r\n    getLastMoveIndex() {\r\n        return this.historyMoves.length - 1;\r\n    }\r\n}\r\n","export class Constants {\n    static readonly DEFAULT_DARK_TILE_COLOR = 'rgb(97, 84, 61)';\n    static readonly DEFAULT_LIGHT_TILE_COLOR = '#BAA378';\n\n    static readonly DEFAULT_SIZE = 500;\n    static readonly MIN_BOARD_SIZE = 100;\n    static readonly MAX_BOARD_SIZE = 4000;\n\n}\n","import { Bishop } from '../../models/pieces/bishop';\r\nimport { Color } from '../../models/pieces/color';\r\nimport { King } from '../../models/pieces/king';\r\nimport { Knight } from '../../models/pieces/knight';\r\nimport { Pawn } from '../../models/pieces/pawn';\r\nimport { Piece } from '../../models/pieces/piece';\r\nimport { Queen } from '../../models/pieces/queen';\r\nimport { Rook } from '../../models/pieces/rook';\r\nimport { PieceIconInput } from './piece-icon-input';\r\n\r\nexport class PieceIconInputManager {\r\n\r\n    private _defaultIcons: boolean = false;\r\n    private _pieceIconInput: PieceIconInput;\r\n\r\n    get pieceIconInput(): PieceIconInput {\r\n        return this._pieceIconInput;\r\n    }\r\n\r\n    set pieceIconInput(value: PieceIconInput) {\r\n        this._pieceIconInput = value;\r\n    }\r\n\r\n\r\n    get defaultIcons(): boolean {\r\n        return this._defaultIcons;\r\n    }\r\n\r\n    set defaultIcons(value: boolean) {\r\n        this._defaultIcons = value;\r\n    }\r\n\r\n    isDefaultIcons(): boolean {\r\n        return this.pieceIconInput === undefined || this.pieceIconInput === null;\r\n    }\r\n\r\n    getPieceIcon(piece: Piece): string {\r\n        let isWhite = (piece.color === Color.WHITE);\r\n        switch (piece.constructor) {\r\n            case King:\r\n                return isWhite ? this.pieceIconInput.whiteKingUrl : this.pieceIconInput.blackKingUrl;\r\n            case Queen:\r\n                return isWhite ? this.pieceIconInput.whiteQueenUrl : this.pieceIconInput.blackQueenUrl;\r\n            case Rook:\r\n                return isWhite ? this.pieceIconInput.whiteRookUrl : this.pieceIconInput.blackRookUrl;\r\n            case Bishop:\r\n                return isWhite ? this.pieceIconInput.whiteBishopUrl : this.pieceIconInput.blackBishopUrl;\r\n            case Knight:\r\n                return isWhite ? this.pieceIconInput.whiteKnightUrl : this.pieceIconInput.blackKnightUrl;\r\n            case Pawn:\r\n                return isWhite ? this.pieceIconInput.whitePawnUrl : this.pieceIconInput.blackPawnUrl;\r\n        }\r\n    }\r\n\r\n    loadDefaultData(){\r\n        this.pieceIconInput = {\r\n            blackBishopUrl: '',\r\n            blackKingUrl: '',\r\n            blackKnightUrl: '',\r\n            blackQueenUrl: '',\r\n            blackRookUrl: '',\r\n            whiteBishopUrl: '',\r\n            whiteKingUrl: '',\r\n            whiteKnightUrl: '',\r\n            whitePawnUrl: '',\r\n            whiteQueenUrl: '',\r\n            whiteRookUrl: '',\r\n            blackPawnUrl: 'a'\r\n        }\r\n    }\r\n\r\n}\r\n","export class CoordsProvider {\r\n    private readonly defaultXCoords: string[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n\r\n    private readonly defaultYCoords: number[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\n\r\n    private currentXCoords: string[] = [...this.defaultXCoords];\r\n    private currentYCoords: number[] = [...this.defaultYCoords];\r\n\r\n    get xCoords(): string[] {\r\n        return this.currentXCoords;\r\n    }\r\n\r\n    get yCoords(): number[] {\r\n        return this.currentYCoords;\r\n    }\r\n\r\n    reverse() {\r\n        this.currentXCoords = this.currentXCoords.reverse();\r\n        this.currentYCoords = this.currentYCoords.reverse();\r\n    }\r\n\r\n    reset() {\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.currentXCoords = [...this.defaultXCoords];\r\n        this.currentYCoords = [...this.defaultYCoords];\r\n    }\r\n}\r\n","import { CdkDragEnd, CdkDragStart } from '@angular/cdk/drag-drop';\r\nimport { DragEndProcessor } from './drag-end-processor';\r\n\r\nexport class DefaultDragEndProcessor implements DragEndProcessor {\r\n\r\n    dragEnded(event: CdkDragEnd) {\r\n        event.source.reset();\r\n        event.source.element.nativeElement.style.zIndex = '0';\r\n        event.source.element.nativeElement.style.pointerEvents = 'auto';\r\n        event.source.element.nativeElement.style.touchAction = 'auto';\r\n    }\r\n\r\n}\r\n","import { CdkDragEnd } from '@angular/cdk/drag-drop';\r\nimport { DefaultDragEndProcessor } from './default-drag-end-processor';\r\nimport { DragEndProcessor } from './drag-end-processor';\r\n\r\nexport class DragEndStrategy {\r\n\r\n    private dragEndProcessor: DragEndProcessor;\r\n\r\n    constructor() {\r\n        this.dragEndProcessor = new DefaultDragEndProcessor();\r\n    }\r\n\r\n    public process(event: CdkDragEnd): void {\r\n        this.dragEndProcessor.dragEnded(event);\r\n    }\r\n\r\n    setDragEndProcessor(processor: DragEndProcessor) {\r\n        this.dragEndProcessor = processor;\r\n    }\r\n\r\n}\r\n","import { CdkDragStart } from '@angular/cdk/drag-drop';\nimport { DragStartProcessor } from './drag-start-processor';\n\nexport class DefaultDragStartProcessor implements DragStartProcessor {\n\n    dragStarted(event: CdkDragStart) {\n        const style = event.source.element.nativeElement.style;\n        style.position = 'relative';\n        style.zIndex = '1000';\n        style.touchAction = 'none';\n        style.pointerEvents = 'none';\n    }\n\n}\n","import { CdkDragStart } from '@angular/cdk/drag-drop';\r\nimport { DefaultDragStartProcessor } from './default-drag-start-processor';\r\nimport { DragStartProcessor } from './drag-start-processor';\r\n\r\nexport class DragStartStrategy {\r\n\r\n    private dragStartProcessor: DragStartProcessor;\r\n\r\n    constructor() {\r\n        this.dragStartProcessor = new DefaultDragStartProcessor();\r\n    }\r\n\r\n    public process(event: CdkDragStart): void {\r\n        this.dragStartProcessor.dragStarted(event);\r\n    }\r\n\r\n    setDragStartProcessor(processor: DragStartProcessor) {\r\n        this.dragStartProcessor = processor;\r\n    }\r\n\r\n}\r\n","import { ColorProcessor } from './color-processor';\r\n\r\nexport class DefaultColorProcessor implements ColorProcessor{\r\n\r\n    resolve(ctrl: any, shift: any, alt: any): string{\r\n        let color = 'green';\r\n\r\n        if (ctrl || shift) {\r\n            color = 'red';\r\n        }\r\n        if (alt) {\r\n            color = 'blue';\r\n        }\r\n        if ((shift || ctrl) && alt) {\r\n            color = 'orange';\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n}\r\n","import { ColorProcessor } from './color-processor';\r\nimport { DefaultColorProcessor } from './default-color-processor';\r\n\r\nexport class ColorStrategy {\r\n\r\n    colorProcessor: ColorProcessor;\r\n\r\n    constructor() {\r\n        this.colorProcessor = new DefaultColorProcessor();\r\n    }\r\n\r\n    resolve(ctrl: any, shift: any, alt: any) {\r\n        return this.colorProcessor.resolve(ctrl, shift, alt);\r\n    }\r\n\r\n    setColorProcessor(colorProcessor: ColorProcessor) {\r\n        this.colorProcessor = colorProcessor;\r\n    }\r\n\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { Arrow } from './shapes/arrow';\r\nimport { Circle } from './shapes/circle';\r\n\r\nexport class DrawProvider {\r\n    private arrowsSubject$ = new BehaviorSubject<Arrow[]>([]);\r\n    private circlesSubject$ = new BehaviorSubject<Circle[]>([]);\r\n\r\n    public arrows$ = this.arrowsSubject$.asObservable();\r\n    public circles$ = this.circlesSubject$.asObservable();\r\n\r\n    private get circles(): Circle[] {\r\n        return this.circlesSubject$.value;\r\n    }\r\n\r\n    private set circles(circles: Circle[]) {\r\n        this.circlesSubject$.next(circles);\r\n    }\r\n\r\n    private get arrows(): Arrow[] {\r\n        return this.arrowsSubject$.value;\r\n    }\r\n\r\n    private set arrows(arrows: Arrow[]) {\r\n        this.arrowsSubject$.next(arrows);\r\n    }\r\n\r\n    addCircle(circle: Circle) {\r\n        this.circles = [...this.circles, circle];\r\n    }\r\n\r\n    reomveCircle(removeCircle: Circle) {\r\n        this.circles = this.circles.filter((circle) => !circle.isEqual(removeCircle));\r\n    }\r\n\r\n    addArrow(arrow: Arrow) {\r\n        this.arrows = [...this.arrows, arrow];\r\n    }\r\n\r\n    removeArrow(removeArrow: Arrow) {\r\n        this.arrows = this.arrows.filter((arrow) => !arrow.isEqual(removeArrow));\r\n    }\r\n\r\n    containsCircle(checkCircle: Circle) {\r\n        return this.circles.some((circle) => circle.isEqual(checkCircle));\r\n    }\r\n\r\n    containsArrow(checkArrow: Arrow) {\r\n        return this.arrows.some((arrow: Arrow) => arrow.isEqual(checkArrow));\r\n    }\r\n\r\n    clear() {\r\n        this.arrows = [];\r\n        this.circles = [];\r\n    }\r\n}\r\n","import { PiecePromotionModalComponent } from '../piece-promotion/piece-promotion-modal/piece-promotion-modal.component';\nimport { HistoryMove } from '../history-move-provider/history-move';\nimport { HistoryMoveProvider } from '../history-move-provider/history-move-provider';\nimport { Board } from '../models/board';\nimport { King } from '../models/pieces/king';\nimport { Pawn } from '../models/pieces/pawn';\nimport { Piece } from '../models/pieces/piece';\nimport { Point } from '../models/pieces/point';\nimport { Rook } from '../models/pieces/rook';\nimport { Constants } from '../utils/constants';\nimport { PieceIconInputManager } from '../utils/inputs/piece-icon-input-manager';\nimport { ColorInput, PieceTypeInput } from '../utils/inputs/piece-type-input';\nimport { BoardLoader } from './board-state-provider/board-loader/board-loader';\nimport { CoordsProvider } from './coords/coords-provider';\nimport { DragEndStrategy } from './drag/end/drag-end-strategy';\nimport { DragStartStrategy } from './drag/start/drag-start-strategy';\nimport { ColorStrategy } from './drawing-tools/colors/color-strategy';\nimport { DrawProvider } from './drawing-tools/draw-provider';\n\nexport abstract class AbstractEngineFacade {\n\n    public dragStartStrategy: DragStartStrategy = new DragStartStrategy();\n    public dragEndStrategy: DragEndStrategy = new DragEndStrategy();\n    protected colorStrategy: ColorStrategy = new ColorStrategy();\n\n    public coords: CoordsProvider = new CoordsProvider();\n    public heightAndWidth: number = Constants.DEFAULT_SIZE;\n\n    public freeMode = false;\n    public dragDisabled: boolean;\n    public drawDisabled: boolean;\n    public lightDisabled: boolean;\n    public darkDisabled: boolean;\n    public board: Board;\n    public modal: PiecePromotionModalComponent;\n    public boardLoader: BoardLoader;\n    public drawProvider: DrawProvider = new DrawProvider();\n    public pieceIconManager: PieceIconInputManager = new PieceIconInputManager();\n    public moveHistoryProvider: HistoryMoveProvider = new HistoryMoveProvider();\n\n    protected constructor(board: Board) {\n        this.board = board;\n    }\n\n    public abstract reset(): void;\n\n    public abstract undo(): void;\n\n    public abstract move(coords: string): void;\n\n    public abstract addPiece(\n        pieceTypeInput: PieceTypeInput,\n        colorInput: ColorInput,\n        coords: string\n    ): void;\n\n    public abstract onMouseUp(\n        event: MouseEvent,\n        pointClicked: Point,\n        left: number,\n        top: number\n    ): void;\n\n    public abstract onMouseDown(\n        event: MouseEvent,\n        pointClicked: Point,\n        left?: number,\n        top?: number\n    ): void;\n\n    public checkIfPawnFirstMove(piece: Piece) {\n        if (piece instanceof Pawn) {\n            piece.isMovedAlready = true;\n        }\n    }\n\n    public checkIfRookMoved(piece: Piece) {\n        if (piece instanceof Rook) {\n            piece.isMovedAlready = true;\n        }\n    }\n\n    public checkIfKingMoved(piece: Piece) {\n        if (piece instanceof King) {\n            piece.isMovedAlready = true;\n        }\n    }\n\n    public getMoveHistory(): HistoryMove[] {\n        return this.moveHistoryProvider.getAll();\n    }\n\n}\n","import { Board } from '../../../models/board';\nimport { Bishop } from '../../../models/pieces/bishop';\nimport { Color } from '../../../models/pieces/color';\nimport { King } from '../../../models/pieces/king';\nimport { Knight } from '../../../models/pieces/knight';\nimport { Pawn } from '../../../models/pieces/pawn';\nimport { Point } from '../../../models/pieces/point';\nimport { Queen } from '../../../models/pieces/queen';\nimport { Rook } from '../../../models/pieces/rook';\nimport { UnicodeConstants } from '../../../utils/unicode-constants';\nimport { AbstractEngineFacade } from '../../abstract-engine-facade';\nimport { DefaultPiecesLoader } from './default-pieces-loader';\nimport { NotationProcessor } from './notation-processors/notation-processor';\nimport { NotationProcessorFactory } from './notation-processors/notation-processor-factory';\n\nexport class BoardLoader {\n\n    private engineFacade: AbstractEngineFacade;\n    private notationProcessor: NotationProcessor;\n\n    constructor(engineFacade: AbstractEngineFacade, notationProcessor?: NotationProcessor) {\n        this.engineFacade = engineFacade;\n\n        if (notationProcessor) {\n            this.notationProcessor = notationProcessor;\n        } else {\n            this.notationProcessor = NotationProcessorFactory.getDefaultProcessor();\n        }\n\n    }\n\n    addPieces() {\n        DefaultPiecesLoader.loadDefaultPieces(this.engineFacade.board);\n    }\n\n    loadFEN(fen: string) {\n        this.notationProcessor.process(fen, this.engineFacade);\n    }\n\n    loadPGN(pgn: string) {\n        this.notationProcessor.process(pgn, this.engineFacade)\n    }\n\n    setEngineFacade(engineFacade: AbstractEngineFacade) {\n        this.engineFacade = engineFacade;\n    }\n\n    setNotationProcessor(notationProcessor: NotationProcessor) {\n        this.notationProcessor = notationProcessor;\n    }\n\n}\n","import { Board } from '../../../models/board';\n\nexport class BoardState {\n\n    board: Board;\n\n    constructor(board: Board) {\n        this.board = board;\n    }\n\n}\n","import { BehaviorSubject } from 'rxjs';\r\nimport { BoardState } from './board-state';\r\n\r\nexport class BoardStateProvider {\r\n    statesSubject$ = new BehaviorSubject<BoardState[]>([]);\r\n\r\n    get states(): BoardState[] {\r\n        return this.statesSubject$.value;\r\n    }\r\n\r\n    set states(states: BoardState[]) {\r\n        this.statesSubject$.next(states);\r\n    }\r\n\r\n    addMove(state: BoardState) {\r\n        this.states = [...this.states, state];\r\n    }\r\n\r\n    getStates(): BoardState[] {\r\n        return this.states;\r\n    }\r\n\r\n    pop(): BoardState {\r\n        const lastState = this.getLastState();\r\n        this.states = this.states.filter((state) => state !== lastState);\r\n        return lastState;\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.states.length === 0;\r\n    }\r\n\r\n    clear() {\r\n        this.states = [];\r\n    }\r\n\r\n    getLastState() {\r\n        return this.states[this.getLastStateIndex()];\r\n    }\r\n\r\n    getLastStateIndex(): number {\r\n        return this.states.length - 1;\r\n    }\r\n}\r\n","import { DrawPoint } from '../draw-point';\r\n\r\nexport class Arrow {\r\n    start: DrawPoint;\r\n    end: DrawPoint;\r\n\r\n    isEqual(arrow: Arrow) {\r\n        return arrow && this.start.isEqual(arrow.start) && this.end.isEqual(arrow.end);\r\n    }\r\n}\r\n","import { DrawPoint } from '../draw-point';\r\n\r\nexport class Circle {\r\n    drawPoint: DrawPoint;\r\n\r\n    isEqual(circle: Circle) {\r\n        return circle && this.drawPoint.isEqual(circle.drawPoint);\r\n    }\r\n}\r\n","import { Point } from '../../models/pieces/point';\r\nimport { AbstractPiece } from './abstract-piece';\r\n\r\nexport abstract class PieceAbstractDecorator implements AbstractPiece {\r\n\r\n    piece: AbstractPiece;\r\n\r\n    protected constructor(piece: AbstractPiece) {\r\n        this.piece = piece;\r\n    }\r\n\r\n    abstract getPossibleCaptures(): Point[];\r\n\r\n    abstract getPossibleMoves(): Point[];\r\n\r\n}\r\n","import { Board } from '../../models/board';\r\nimport { Color } from '../../models/pieces/color';\r\nimport { Point } from '../../models/pieces/point';\r\nimport { MoveUtils } from '../../utils/move-utils';\r\nimport { AbstractPiece } from './abstract-piece';\r\nimport { PieceAbstractDecorator } from './piece-abstract-decorator';\r\n\r\nexport class AvailableMoveDecorator extends PieceAbstractDecorator {\r\n    private pointClicked: Point;\r\n    private color: Color;\r\n    private board: Board;\r\n\r\n    constructor(piece: AbstractPiece, pointClicked: Point, color: Color, board: Board) {\r\n        super(piece);\r\n        this.pointClicked = pointClicked;\r\n        this.color = color;\r\n        this.board = board;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        return this.piece\r\n            .getPossibleCaptures()\r\n            .filter(\r\n                (point) =>\r\n                    !MoveUtils.willMoveCauseCheck(\r\n                        this.color,\r\n                        this.pointClicked.row,\r\n                        this.pointClicked.col,\r\n                        point.row,\r\n                        point.col,\r\n                        this.board\r\n                    )\r\n            );\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        return this.piece\r\n            .getPossibleMoves()\r\n            .filter(\r\n                (point) =>\r\n                    !MoveUtils.willMoveCauseCheck(\r\n                        this.color,\r\n                        this.pointClicked.row,\r\n                        this.pointClicked.col,\r\n                        point.row,\r\n                        point.col,\r\n                        this.board\r\n                    )\r\n            );\r\n    }\r\n}\r\n","import { Board } from '../models/board';\r\nimport { Bishop } from '../models/pieces/bishop';\r\nimport { Color } from '../models/pieces/color';\r\nimport { Knight } from '../models/pieces/knight';\r\nimport { Piece } from '../models/pieces/piece';\r\nimport { Queen } from '../models/pieces/queen';\r\nimport { Rook } from '../models/pieces/rook';\r\nimport { UnicodeConstants } from '../utils/unicode-constants';\r\n\r\nexport class PiecePromotionResolver {\r\n\r\n    static resolvePromotionChoice(board: Board, piece: Piece, index: number) {\r\n        const isWhite = piece.color === Color.WHITE;\r\n        switch (index) {\r\n            case 1:\r\n                board.pieces.push(\r\n                    new Queen(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_QUEEN\r\n                            : UnicodeConstants.BLACK_QUEEN,\r\n                        board\r\n                    )\r\n                );\r\n                break;\r\n            case 2:\r\n                board.pieces.push(\r\n                    new Rook(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_ROOK\r\n                            : UnicodeConstants.BLACK_ROOK,\r\n                        board\r\n                    )\r\n                );\r\n                break;\r\n            case 3:\r\n                board.pieces.push(\r\n                    new Bishop(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_BISHOP\r\n                            : UnicodeConstants.BLACK_BISHOP,\r\n                        board\r\n                    )\r\n                );\r\n                break;\r\n            case 4:\r\n                board.pieces.push(\r\n                    new Knight(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_KNIGHT\r\n                            : UnicodeConstants.BLACK_KNIGHT,\r\n                        board\r\n                    )\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n","export enum PieceTypeInput {\r\n\r\n    KING = 1,\r\n    QUEEN = 2,\r\n    BISHOP = 3,\r\n    KNIGHT = 4,\r\n    ROOK = 5,\r\n    PAWN = 6\r\n\r\n}\r\n\r\nexport enum ColorInput {\r\n\r\n    LIGHT = 1,\r\n    DARK = 2\r\n\r\n}\r\n","import { Board } from '../../models/board';\r\nimport { MoveTranslation } from '../../models/move-translation';\r\nimport { Bishop } from '../../models/pieces/bishop';\r\nimport { Color } from '../../models/pieces/color';\r\nimport { King } from '../../models/pieces/king';\r\nimport { Knight } from '../../models/pieces/knight';\r\nimport { Pawn } from '../../models/pieces/pawn';\r\nimport { Piece } from '../../models/pieces/piece';\r\nimport { Point } from '../../models/pieces/point';\r\nimport { Queen } from '../../models/pieces/queen';\r\nimport { Rook } from '../../models/pieces/rook';\r\nimport {\r\n    ColorInput,\r\n    PieceTypeInput\r\n} from '../../utils/inputs/piece-type-input';\r\nimport { UnicodeConstants } from '../../utils/unicode-constants';\r\n\r\nexport class PieceFactory {\r\n\r\n    static create(\r\n        indexes: MoveTranslation,\r\n        pieceTypeInput: PieceTypeInput,\r\n        colorInput: ColorInput,\r\n        board: Board\r\n    ): Piece {\r\n        let piece;\r\n        let color = colorInput === ColorInput.LIGHT\r\n            ? Color.WHITE\r\n            : Color.BLACK;\r\n\r\n        switch (pieceTypeInput) {\r\n            case PieceTypeInput.QUEEN:\r\n                piece = new Queen(\r\n                    new Point(indexes.yAxis, indexes.xAxis),\r\n                    color,\r\n                    color === Color.WHITE ? UnicodeConstants.WHITE_QUEEN : UnicodeConstants.BLACK_QUEEN,\r\n                    board\r\n                );\r\n                break;\r\n            case PieceTypeInput.KING:\r\n                piece = new King(\r\n                    new Point(indexes.yAxis, indexes.xAxis),\r\n                    color,\r\n                    color === Color.WHITE ? UnicodeConstants.WHITE_KING : UnicodeConstants.BLACK_KING,\r\n                    board\r\n                );\r\n\r\n                break;\r\n            case PieceTypeInput.KNIGHT:\r\n                piece = new Knight(\r\n                    new Point(indexes.yAxis, indexes.xAxis),\r\n                    color,\r\n                    color === Color.WHITE ? UnicodeConstants.WHITE_KNIGHT : UnicodeConstants.BLACK_KNIGHT,\r\n                    board\r\n                );\r\n                break;\r\n            case PieceTypeInput.BISHOP:\r\n                piece = new Bishop(\r\n                    new Point(indexes.yAxis, indexes.xAxis),\r\n                    color,\r\n                    color === Color.WHITE ? UnicodeConstants.WHITE_BISHOP : UnicodeConstants.BLACK_BISHOP,\r\n                    board\r\n                );\r\n                break;\r\n            case PieceTypeInput.ROOK:\r\n                piece = new Rook(\r\n                    new Point(indexes.yAxis, indexes.xAxis),\r\n                    color,\r\n                    color === Color.WHITE ? UnicodeConstants.WHITE_ROOK : UnicodeConstants.BLACK_ROOK,\r\n                    board\r\n                );\r\n                break;\r\n            case PieceTypeInput.PAWN:\r\n                piece = new Pawn(\r\n                    new Point(indexes.yAxis, indexes.xAxis),\r\n                    color,\r\n                    color === Color.WHITE ? UnicodeConstants.WHITE_PAWN : UnicodeConstants.BLACK_PAWN,\r\n                    board\r\n                );\r\n                break;\r\n        }\r\n\r\n        return piece;\r\n    }\r\n}\r\n","import { EventEmitter } from '@angular/core';\nimport { HistoryMove } from '../history-move-provider/history-move';\nimport { ColorInput, PieceTypeInput } from '../utils/inputs/piece-type-input';\nimport { AbstractEngineFacade } from './abstract-engine-facade';\n\nimport { BoardLoader } from './board-state-provider/board-loader/board-loader';\nimport { BoardState } from './board-state-provider/board-state/board-state';\nimport { BoardStateProvider } from './board-state-provider/board-state/board-state-provider';\nimport { MoveStateProvider } from './board-state-provider/board-state/move-state-provider';\nimport { ClickUtils } from './click/click-utils';\nimport { Arrow } from './drawing-tools/shapes/arrow';\nimport { Circle } from './drawing-tools/shapes/circle';\nimport { DrawPoint } from './drawing-tools/draw-point';\nimport { DrawProvider } from './drawing-tools/draw-provider';\nimport { Board } from '../models/board';\nimport { Color } from '../models/pieces/color';\nimport { King } from '../models/pieces/king';\nimport { Pawn } from '../models/pieces/pawn';\nimport { Piece } from '../models/pieces/piece';\nimport { Point } from '../models/pieces/point';\nimport { AvailableMoveDecorator } from './piece-decorator/available-move-decorator';\nimport { PiecePromotionResolver } from '../piece-promotion/piece-promotion-resolver';\nimport { MoveUtils } from '../utils/move-utils';\nimport { MoveChange } from './move-change/move-change';\nimport { PieceFactory } from './utils/piece-factory';\n\nexport class EngineFacade extends AbstractEngineFacade {\n\n    _selected = false;\n    drawPoint: DrawPoint;\n    drawProvider: DrawProvider;\n    disabling = false;\n    boardStateProvider: BoardStateProvider;\n    moveStateProvider: MoveStateProvider;\n    moveChange: EventEmitter<MoveChange>;\n\n    constructor(\n        board: Board,\n        moveChange: EventEmitter<MoveChange>\n    ) {\n        super(board);\n        this.moveChange = moveChange;\n        this.boardLoader = new BoardLoader(this);\n        this.boardLoader.addPieces();\n        this.boardStateProvider = new BoardStateProvider();\n    }\n\n    public reset(): void {\n        this.boardStateProvider.clear();\n        this.moveHistoryProvider.clear();\n        this.boardLoader.addPieces();\n        this.board.reset();\n        this.coords.reset();\n        this.drawProvider.clear();\n        this.freeMode = false;\n    }\n\n    public undo(): void {\n        if (!this.boardStateProvider.isEmpty()) {\n            const lastBoard = this.boardStateProvider.pop().board;\n            if (this.board.reverted) {\n                lastBoard.reverse();\n            }\n            this.board = lastBoard;\n            this.board.possibleCaptures = [];\n            this.board.possibleMoves = [];\n            this.moveHistoryProvider.pop();\n        }\n    }\n\n    saveMoveClone() {\n        const clone = this.board.clone();\n\n        if (this.board.reverted) {\n            clone.reverse();\n        }\n        this.moveStateProvider.addMove(new BoardState(clone));\n    }\n\n    public move(coords: string) {\n        if (coords) {\n            const sourceIndexes = MoveUtils.translateCoordsToIndex(\n                coords.substring(0, 2),\n                this.board.reverted\n            );\n\n            const destIndexes = MoveUtils.translateCoordsToIndex(\n                coords.substring(2, 4),\n                this.board.reverted\n            );\n\n            const srcPiece = this.board.getPieceByPoint(\n                sourceIndexes.yAxis,\n                sourceIndexes.xAxis\n            );\n\n            if (srcPiece) {\n                if (\n                    (this.board.currentWhitePlayer &&\n                        srcPiece.color === Color.BLACK) ||\n                    (!this.board.currentWhitePlayer &&\n                        srcPiece.color === Color.WHITE)\n                ) {\n                    return;\n                }\n\n                this.prepareActivePiece(srcPiece, srcPiece.point);\n\n                if (\n                    this.board.isPointInPossibleMoves(\n                        new Point(destIndexes.yAxis, destIndexes.xAxis)\n                    ) ||\n                    this.board.isPointInPossibleCaptures(\n                        new Point(destIndexes.yAxis, destIndexes.xAxis)\n                    )\n                ) {\n                    this.saveClone();\n                    this.movePiece(\n                        srcPiece,\n                        new Point(destIndexes.yAxis, destIndexes.xAxis),\n                        coords.length === 5 ? +coords.substring(4, 5) : 0\n                    );\n\n                    this.board.lastMoveSrc = new Point(\n                        sourceIndexes.yAxis,\n                        sourceIndexes.xAxis\n                    );\n                    this.board.lastMoveDest = new Point(\n                        destIndexes.yAxis,\n                        destIndexes.xAxis\n                    );\n\n                    this.disableSelection();\n                } else {\n                    this.disableSelection();\n                }\n            }\n        }\n\n    }\n\n    prepareActivePiece(pieceClicked: Piece, pointClicked: Point) {\n        this.board.activePiece = pieceClicked;\n        this._selected = true;\n        this.board.possibleCaptures = new AvailableMoveDecorator(\n            pieceClicked,\n            pointClicked,\n            this.board.currentWhitePlayer ? Color.WHITE : Color.BLACK,\n            this.board\n        ).getPossibleCaptures();\n        this.board.possibleMoves = new AvailableMoveDecorator(\n            pieceClicked,\n            pointClicked,\n            this.board.currentWhitePlayer ? Color.WHITE : Color.BLACK,\n            this.board\n        ).getPossibleMoves();\n    }\n\n    onPieceClicked(pieceClicked, pointClicked) {\n        if (\n            (this.board.currentWhitePlayer && pieceClicked.color === Color.BLACK) ||\n            (!this.board.currentWhitePlayer && pieceClicked.color === Color.WHITE)\n        ) {\n            return;\n        }\n\n        this.prepareActivePiece(pieceClicked, pointClicked);\n    }\n\n    public handleClickEvent(pointClicked: Point, isMouseDown: boolean) {\n        let moving = false;\n\n        if ((\n            this.board.isPointInPossibleMoves(pointClicked) ||\n            this.board.isPointInPossibleCaptures(pointClicked)\n        ) || this.freeMode) {\n            this.saveClone();\n            this.board.lastMoveSrc = new Point(\n                this.board.activePiece.point.row,\n                this.board.activePiece.point.col\n            );\n            this.board.lastMoveDest = pointClicked.clone();\n            this.movePiece(this.board.activePiece, pointClicked);\n\n            if (!this.board.activePiece.point.isEqual(this.board.lastMoveSrc)) {\n                moving = true;\n            }\n        }\n\n        if (isMouseDown || moving) {\n            this.disableSelection();\n        }\n        this.disableSelection();\n        const pieceClicked = this.board.getPieceByPoint(\n            pointClicked.row,\n            pointClicked.col\n        );\n        if (pieceClicked && !moving) {\n            this.onFreeMode(pieceClicked);\n            this.onPieceClicked(pieceClicked, pointClicked);\n        }\n    }\n\n    onMouseDown(\n        event: MouseEvent,\n        pointClicked: Point,\n        left?: number,\n        top?: number\n    ) {\n        if (event.button !== 0) {\n            this.drawPoint = ClickUtils.getDrawingPoint(\n                this.heightAndWidth,\n                this.colorStrategy,\n                event.x,\n                event.y,\n                event.ctrlKey,\n                event.altKey,\n                event.shiftKey,\n                left,\n                top\n            );\n            return;\n        }\n\n        this.drawProvider.clear();\n\n        if (\n            this.board.activePiece &&\n            pointClicked.isEqual(this.board.activePiece.point)\n        ) {\n            this.disabling = true;\n            return;\n        }\n\n        const pieceClicked = this.board.getPieceByPoint(\n            pointClicked.row,\n            pointClicked.col\n        );\n\n        if (this.freeMode) {\n            if (pieceClicked) {\n                if (event.ctrlKey) {\n                    this.board.pieces = this.board.pieces.filter(e => e !== pieceClicked);\n                    return;\n                }\n                this.board.currentWhitePlayer = (pieceClicked.color === Color.WHITE);\n            }\n        }\n\n        if (this.isPieceDisabled(pieceClicked)) {\n            return;\n        }\n\n        if (this._selected) {\n            this.handleClickEvent(pointClicked, true);\n        } else {\n            if (pieceClicked) {\n                this.onFreeMode(pieceClicked);\n                this.onPieceClicked(pieceClicked, pointClicked);\n            }\n        }\n    }\n\n    onMouseUp(\n        event: MouseEvent,\n        pointClicked: Point,\n        left: number,\n        top: number\n    ) {\n        if (event.button !== 0 && !this.drawDisabled) {\n            this.addDrawPoint(\n                event.x,\n                event.y,\n                event.ctrlKey,\n                event.altKey,\n                event.shiftKey,\n                left, top\n            );\n            return;\n        }\n\n        this.drawProvider.clear();\n\n        if (this.dragDisabled) {\n            return;\n        }\n\n        if (\n            this.board.activePiece &&\n            pointClicked.isEqual(this.board.activePiece.point) &&\n            this.disabling\n        ) {\n            this.disableSelection();\n            this.disabling = false;\n            return;\n        }\n        const pieceClicked = this.board.getPieceByPoint(\n            pointClicked.row,\n            pointClicked.col\n        );\n\n        if (this.isPieceDisabled(pieceClicked)) {\n            return;\n        }\n\n        if (this._selected) {\n            this.handleClickEvent(pointClicked, false);\n            //   this.possibleMoves = activePiece.getPossibleMoves();\n        }\n    }\n\n    saveClone() {\n        const clone = this.board.clone();\n\n        if (this.board.reverted) {\n            clone.reverse();\n        }\n        this.boardStateProvider.addMove(new BoardState(clone));\n    }\n\n    movePiece(toMovePiece: Piece, newPoint: Point, promotionIndex?: number) {\n        const destPiece = this.board.pieces.find(\n            (piece) =>\n                piece.point.col === newPoint.col &&\n                piece.point.row === newPoint.row\n        );\n\n        if (destPiece && toMovePiece.color !== destPiece.color) {\n            this.board.pieces = this.board.pieces.filter(\n                (piece) => piece !== destPiece\n            );\n        } else {\n            if (destPiece && toMovePiece.color === destPiece.color) {\n                return;\n            }\n        }\n\n        const move = new HistoryMove(\n            MoveUtils.format(toMovePiece.point, newPoint, this.board.reverted),\n            toMovePiece.constant.name,\n            toMovePiece.color === Color.WHITE ? 'white' : 'black',\n            !!destPiece\n        );\n        this.moveHistoryProvider.addMove(move);\n\n        if (toMovePiece instanceof King) {\n            const squaresMoved = Math.abs(newPoint.col - toMovePiece.point.col);\n            if (squaresMoved > 1) {\n                if (newPoint.col < 3) {\n                    const leftRook = this.board.getPieceByField(\n                        toMovePiece.point.row,\n                        0\n                    );\n                    if (!this.freeMode) {\n                        leftRook.point.col = this.board.reverted ? 2 : 3;\n                    }\n                } else {\n                    const rightRook = this.board.getPieceByField(\n                        toMovePiece.point.row,\n                        7\n                    );\n                    if (!this.freeMode) {\n                        rightRook.point.col = this.board.reverted ? 4 : 5;\n                    }\n                }\n            }\n        }\n\n        if (toMovePiece instanceof Pawn) {\n            this.board.checkIfPawnTakesEnPassant(newPoint);\n            this.board.checkIfPawnEnpassanted(toMovePiece, newPoint);\n        } else {\n            this.board.enPassantPoint = null;\n            this.board.enPassantPiece = null;\n        }\n\n        toMovePiece.point = newPoint;\n        this.increaseFullMoveCount();\n        this.board.currentWhitePlayer = !this.board.currentWhitePlayer;\n\n        if (!this.checkForPawnPromote(toMovePiece, promotionIndex)) {\n            this.afterMoveActions();\n        }\n    }\n\n    checkForPawnPromote(toPromotePiece: Piece, promotionIndex?: number) {\n        if (!(toPromotePiece instanceof Pawn)) {\n            return;\n        }\n\n        if (toPromotePiece.point.row === 0 || toPromotePiece.point.row === 7) {\n            this.board.pieces = this.board.pieces.filter(\n                (piece) => piece !== toPromotePiece\n            );\n\n            // When we make move manually, we pass promotion index already, so we don't need\n            // to acquire it from promote dialog\n            if (!promotionIndex) {\n                this.openPromoteDialog(toPromotePiece);\n            } else {\n                PiecePromotionResolver.resolvePromotionChoice(\n                    this.board,\n                    toPromotePiece,\n                    promotionIndex\n                );\n                this.afterMoveActions(promotionIndex);\n            }\n\n            return true;\n        }\n    }\n\n    afterMoveActions(promotionIndex?: number) {\n        this.checkIfPawnFirstMove(this.board.activePiece);\n        this.checkIfRookMoved(this.board.activePiece);\n        this.checkIfKingMoved(this.board.activePiece);\n\n        this.board.blackKingChecked = this.board.isKingInCheck(\n            Color.BLACK,\n            this.board.pieces\n        );\n        this.board.whiteKingChecked = this.board.isKingInCheck(\n            Color.WHITE,\n            this.board.pieces\n        );\n        const check =\n            this.board.blackKingChecked || this.board.whiteKingChecked;\n        const checkmate =\n            this.checkForPossibleMoves(Color.BLACK) ||\n            this.checkForPossibleMoves(Color.WHITE);\n        const stalemate =\n            this.checkForPat(Color.BLACK) || this.checkForPat(Color.WHITE);\n\n        this.disabling = false;\n        this.board.calculateFEN();\n\n        const lastMove = this.moveHistoryProvider.getLastMove();\n        if (lastMove && promotionIndex) {\n            lastMove.move += promotionIndex;\n        }\n\n        this.moveChange.emit({\n            ...lastMove,\n            check,\n            checkmate,\n            stalemate,\n            fen: this.board.fen,\n            freeMode: this.freeMode\n        });\n    }\n\n    checkForPat(color: Color) {\n        if (color === Color.WHITE && !this.board.whiteKingChecked) {\n            return this.checkForPossibleMoves(color);\n        } else {\n            if (color === Color.BLACK && !this.board.blackKingChecked) {\n                return this.checkForPossibleMoves(color);\n            }\n        }\n    }\n\n    openPromoteDialog(piece: Piece) {\n        this.modal.open((index) => {\n            PiecePromotionResolver.resolvePromotionChoice(\n                this.board,\n                piece,\n                index\n            );\n            this.afterMoveActions(index);\n        });\n    }\n\n    checkForPossibleMoves(color: Color): boolean {\n        return !this.board.pieces\n            .filter((piece) => piece.color === color)\n            .some(\n                (piece) =>\n                    piece\n                        .getPossibleMoves()\n                        .some(\n                            (move) =>\n                                !MoveUtils.willMoveCauseCheck(\n                                    color,\n                                    piece.point.row,\n                                    piece.point.col,\n                                    move.row,\n                                    move.col,\n                                    this.board\n                                )\n                        ) ||\n                    piece\n                        .getPossibleCaptures()\n                        .some(\n                            (capture) =>\n                                !MoveUtils.willMoveCauseCheck(\n                                    color,\n                                    piece.point.row,\n                                    piece.point.col,\n                                    capture.row,\n                                    capture.col,\n                                    this.board\n                                )\n                        )\n            );\n    }\n\n    disableSelection() {\n        this._selected = false;\n        this.board.possibleCaptures = [];\n        this.board.activePiece = null;\n        this.board.possibleMoves = [];\n    }\n\n    /**\n     * Processes logic to allow freeMode based logic processing\n     */\n    onFreeMode(pieceClicked) {\n        if (\n            !this.freeMode ||\n            pieceClicked === undefined ||\n            pieceClicked === null\n        ) {\n            return;\n        }\n        // sets player as white in-case white pieces are selected, and vice-versa when black is selected\n        this.board.currentWhitePlayer = pieceClicked.color === Color.WHITE;\n    }\n\n    isPieceDisabled(pieceClicked: Piece) {\n        if (pieceClicked && pieceClicked.point) {\n            const foundCapture = this.board.possibleCaptures.find(\n                (capture) =>\n                    capture.col === pieceClicked.point.col &&\n                    capture.row === pieceClicked.point.row\n            );\n\n            if (foundCapture) {\n                return false;\n            }\n        }\n        return (\n            pieceClicked &&\n            ((this.lightDisabled && pieceClicked.color === Color.WHITE) ||\n                (this.darkDisabled && pieceClicked.color === Color.BLACK))\n        );\n    }\n\n    addDrawPoint(\n        x: number,\n        y: number,\n        crtl: boolean,\n        alt: boolean,\n        shift: boolean,\n        left: number,\n        top: number\n    ) {\n        const upPoint = ClickUtils.getDrawingPoint(\n            this.heightAndWidth,\n            this.colorStrategy,\n            x,\n            y,\n            crtl,\n            alt,\n            shift,\n            left,\n            top\n        );\n\n        if (this.drawPoint.isEqual(upPoint)) {\n            const circle = new Circle();\n            circle.drawPoint = upPoint;\n            if (!this.drawProvider.containsCircle(circle)) {\n                this.drawProvider.addCircle(circle);\n            } else {\n                this.drawProvider.reomveCircle(circle);\n            }\n        } else {\n            const arrow = new Arrow();\n            arrow.start = this.drawPoint;\n            arrow.end = upPoint;\n\n            if (!this.drawProvider.containsArrow(arrow)) {\n                this.drawProvider.addArrow(arrow);\n            } else {\n                this.drawProvider.removeArrow(arrow);\n            }\n        }\n    }\n\n    increaseFullMoveCount() {\n        if (!this.board.currentWhitePlayer) {\n            ++this.board.fullMoveCount;\n        }\n    }\n\n    addPiece(\n        pieceTypeInput: PieceTypeInput,\n        colorInput: ColorInput,\n        coords: string\n    ) {\n        if (this.freeMode && coords && pieceTypeInput > 0 && colorInput > 0) {\n            let indexes = MoveUtils.translateCoordsToIndex(\n                coords,\n                this.board.reverted\n            );\n            let existing = this.board.getPieceByPoint(\n                indexes.yAxis,\n                indexes.xAxis\n            );\n            if (existing) {\n                this.board.pieces = this.board.pieces.filter(e => e !== existing);\n            }\n            let createdPiece = PieceFactory.create(\n                indexes,\n                pieceTypeInput,\n                colorInput,\n                this.board\n            );\n            this.saveClone();\n            this.board.pieces.push(createdPiece);\n            this.afterMoveActions();\n        }\n    }\n}\n","import { cloneDeep } from 'lodash';\nimport { Bishop } from './pieces/bishop';\nimport { Color } from './pieces/color';\nimport { King } from './pieces/king';\nimport { Knight } from './pieces/knight';\nimport { Pawn } from './pieces/pawn';\nimport { Piece } from './pieces/piece';\nimport { Point } from './pieces/point';\nimport { Queen } from './pieces/queen';\nimport { Rook } from './pieces/rook';\n\nexport class Board {\n    board: number[][] = [];\n    pieces: Piece[] = [];\n\n    enPassantPoint: Point = null;\n    enPassantPiece: Piece = null;\n    lastMoveSrc: Point = null;\n    lastMoveDest: Point = null;\n    activePiece: Piece;\n\n    blackKingChecked: boolean;\n    possibleCaptures: any[] = [];\n    possibleMoves: Point[] = [];\n    whiteKingChecked: boolean;\n\n    currentWhitePlayer = true;\n    reverted = false;\n    fullMoveCount = 1;\n    fen: string;\n\n    constructor() {\n        for (let i = 0; i < 8; ++i) {\n            this.board[i] = [];\n            for (let j = 0; j < 8; ++j) {\n                this.board[i][j] = 0;\n            }\n        }\n    }\n\n    isXYInPossibleMoves(row: number, col: number): boolean {\n        return this.possibleMoves.some((move) => move.row === row && move.col === col);\n    }\n\n    isXYInPossibleCaptures(row: number, col: number): boolean {\n        return this.possibleCaptures.some((capture) => capture.row === row && capture.col === col);\n    }\n\n    isXYInSourceMove(i: number, j: number) {\n        return this.lastMoveSrc && this.lastMoveSrc.row === i && this.lastMoveSrc.col === j;\n    }\n\n    isXYInDestMove(i: number, j: number) {\n        return this.lastMoveDest && this.lastMoveDest.row === i && this.lastMoveDest.col === j;\n    }\n\n    isXYInActiveMove(i: number, j: number) {\n        return this.activePiece && this.activePiece.point.row === i && this.activePiece.point.col === j;\n    }\n\n    isPointInPossibleMoves(point: Point): boolean {\n        return this.possibleMoves.some((move) => move.row === point.row && move.col === point.col);\n    }\n\n    isPointInPossibleCaptures(point: Point): boolean {\n        return this.possibleCaptures.some((capture) => capture.row === point.row && capture.col === point.col);\n    }\n\n    reset() {\n        this.lastMoveDest = null;\n        this.lastMoveSrc = null;\n        this.whiteKingChecked = false;\n        this.blackKingChecked = false;\n        this.possibleCaptures = [];\n        this.possibleMoves = [];\n        this.activePiece = null;\n        this.reverted = false;\n        this.currentWhitePlayer = true;\n        this.enPassantPoint = null;\n        this.enPassantPiece = null;\n        this.fullMoveCount = 1;\n        this.calculateFEN();\n    }\n\n        reverse() {\n        this.reverted = !this.reverted;\n        this.activePiece = null;\n        this.possibleMoves = [];\n        this.possibleCaptures = [];\n\n        this.pieces.forEach((piece: Piece) => this.reversePoint(piece.point));\n\n        this.reversePoint(this.lastMoveSrc);\n        this.reversePoint(this.lastMoveDest);\n\n        if (this.enPassantPoint && this.enPassantPiece) {\n            this.reversePoint(this.enPassantPoint);\n        }\n    }\n\n    clone(): Board {\n        return cloneDeep(this);\n    }\n\n    isFieldTakenByEnemy(row: number, col: number, enemyColor: Color): boolean {\n        if (row > 7 || row < 0 || col > 7 || col < 0) {\n            return false;\n        }\n        return this.pieces.some(\n            (piece) => piece.point.col === col && piece.point.row === row && piece.color === enemyColor\n        );\n    }\n\n    isFieldEmpty(row: number, col: number): boolean {\n        if (row > 7 || row < 0 || col > 7 || col < 0) {\n            return false;\n        }\n        return !this.pieces.some((piece) => piece.point.col === col && piece.point.row === row);\n    }\n\n    isFieldUnderAttack(row: number, col: number, color: Color) {\n        return this.pieces\n            .filter((piece) => piece.color === color)\n            .some((piece) => piece.getCoveredFields().some((field) => field.col === col && field.row === row));\n    }\n\n    getPieceByField(row: number, col: number): Piece {\n        if (this.isFieldEmpty(row, col)) {\n            //   throw new Error('Piece not found');\n            return undefined;\n        }\n\n        return this.pieces.find((piece) => piece.point.col === col && piece.point.row === row);\n    }\n\n    isKingInCheck(color: Color, pieces: Piece[]): boolean {\n        const king = pieces.find((piece) => piece.color === color && piece instanceof King);\n\n        if (king) {\n            return pieces.some(\n                (piece) =>\n                    piece\n                        .getPossibleCaptures()\n                        .some((point) => point.col === king.point.col && point.row === king.point.row) &&\n                    piece.color !== color\n            );\n        }\n        return false;\n    }\n\n    getKingByColor(color: Color): King {\n        return this.pieces.find((piece) => piece instanceof King && piece.color === color) as King;\n    }\n\n    getCastleFENString(color: Color) {\n        const king = this.getKingByColor(color);\n\n        if (!king || king.isMovedAlready) {\n            return '';\n        }\n\n        let fen = '';\n        const leftRook = this.getPieceByField(king.point.row, 0);\n        const rightRook = this.getPieceByField(king.point.row, 7);\n\n        if (rightRook instanceof Rook && rightRook.color === color) {\n            if (!rightRook.isMovedAlready) {\n                fen += this.reverted ? 'q' : 'k';\n            }\n        }\n\n        if (leftRook instanceof Rook && leftRook.color === color) {\n            if (!leftRook.isMovedAlready) {\n                fen += this.reverted ? 'k' : 'q';\n            }\n        }\n\n        fen = fen.split('').sort().join('');\n        return color === Color.BLACK ? fen : fen.toUpperCase();\n    }\n\n    getEnPassantFENString() {\n        if (this.enPassantPoint) {\n            if (this.reverted) {\n                return String.fromCharCode(104 - this.enPassantPoint.col) + (this.enPassantPoint.row + 1);\n            } else {\n                return String.fromCharCode(97 + this.enPassantPoint.col) + (Math.abs(this.enPassantPoint.row - 7) + 1);\n            }\n        } else {\n            return '-';\n        }\n    }\n\n    calculateFEN() {\n        let fen = '';\n        for (let i = 0; i < 8; ++i) {\n            let emptyFields = 0;\n            for (let j = 0; j < 8; ++j) {\n                const foundPiece = this.pieces.find((piece) => piece.point.col === j && piece.point.row === i);\n                if (foundPiece) {\n                    if (emptyFields > 0) {\n                        fen += emptyFields;\n                        emptyFields = 0;\n                    }\n\n                    if (foundPiece instanceof Rook) {\n                        fen += foundPiece.color === Color.BLACK ? 'r' : 'R';\n                    } else {\n                        if (foundPiece instanceof Knight) {\n                            fen += foundPiece.color === Color.BLACK ? 'n' : 'N';\n                        } else {\n                            if (foundPiece instanceof Bishop) {\n                                fen += foundPiece.color === Color.BLACK ? 'b' : 'B';\n                            } else {\n                                if (foundPiece instanceof Queen) {\n                                    fen += foundPiece.color === Color.BLACK ? 'q' : 'Q';\n                                } else {\n                                    if (foundPiece instanceof King) {\n                                        fen += foundPiece.color === Color.BLACK ? 'k' : 'K';\n                                    } else {\n                                        if (foundPiece instanceof Pawn) {\n                                            fen += foundPiece.color === Color.BLACK ? 'p' : 'P';\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    ++emptyFields;\n                }\n            }\n\n            if (emptyFields > 0) {\n                fen += emptyFields;\n            }\n\n            fen += '/';\n        }\n\n        fen = fen.substr(0, fen.length - 1);\n\n        if (this.reverted) {\n            fen = fen.split('').reverse().join('');\n        }\n\n        fen += ' ' + (this.currentWhitePlayer ? 'w' : 'b');\n        const whiteEnPassant = this.getCastleFENString(Color.WHITE);\n        const blackEnPassant = this.getCastleFENString(Color.BLACK);\n        let concatedEnPassant = whiteEnPassant + blackEnPassant;\n        if (!concatedEnPassant) {\n            concatedEnPassant = '-';\n        }\n\n        fen += ' ' + concatedEnPassant;\n        fen += ' ' + this.getEnPassantFENString();\n        fen += ' ' + 0;\n        fen += ' ' + this.fullMoveCount;\n        this.fen = fen;\n    }\n\n    isXYInPointSelection(i: number, j: number) {\n        return false;\n    }\n\n    private reversePoint(point: Point) {\n        if (point) {\n            point.row = Math.abs(point.row - 7);\n            point.col = Math.abs(point.col - 7);\n        }\n    }\n\n    public getPieceByPoint(row: number, col: number): Piece {\n        row = Math.floor(row);\n        col = Math.floor(col);\n        return this.pieces.find(\n            (piece) => piece.point.col === col && piece.point.row === row\n        );\n    }\n\n    public checkIfPawnTakesEnPassant(newPoint: Point) {\n        if (newPoint.isEqual(this.enPassantPoint)) {\n            console.log('usuwam');\n            this.pieces = this.pieces.filter(\n                (piece) => piece !== this.enPassantPiece\n            );\n            this.enPassantPoint = null;\n            this.enPassantPiece = null;\n        }\n    }\n\n    public checkIfPawnEnpassanted(piece: Pawn, newPoint: Point) {\n        if (Math.abs(piece.point.row - newPoint.row) > 1) {\n            this.enPassantPiece = piece;\n            this.enPassantPoint = new Point(\n                (piece.point.row + newPoint.row) / 2,\n                piece.point.col\n            );\n        } else {\n            this.enPassantPoint = null;\n            this.enPassantPiece = null;\n        }\n    }\n\n    isKingChecked(piece: Piece) {\n        if (piece instanceof King) {\n            return piece.color === Color.WHITE\n                ? this.whiteKingChecked\n                : this.blackKingChecked;\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NgxChessBoardService {\r\n    private componentMethodCallSource = new Subject<any>();\r\n\r\n    componentMethodCalled$ = this.componentMethodCallSource.asObservable();\r\n\r\n    reset() {\r\n        this.componentMethodCallSource.next();\r\n    }\r\n}\r\n","import { CdkDragEnd, CdkDragStart } from '@angular/cdk/drag-drop';\nimport {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AbstractEngineFacade } from './engine/abstract-engine-facade';\nimport { BoardLoader } from './engine/board-state-provider/board-loader/board-loader';\nimport {\n    NotationProcessorFactory, NotationType,\n} from './engine/board-state-provider/board-loader/notation-processors/notation-processor-factory';\nimport { ClickUtils } from './engine/click/click-utils';\nimport { EngineFacade } from './engine/engine-facade';\nimport { MoveChange } from './engine/move-change/move-change';\nimport { HistoryMove } from './history-move-provider/history-move';\nimport { Board } from './models/board';\nimport { Piece } from './models/pieces/piece';\nimport { NgxChessBoardView } from './ngx-chess-board-view';\nimport { PiecePromotionModalComponent } from './piece-promotion/piece-promotion-modal/piece-promotion-modal.component';\nimport { NgxChessBoardService } from './service/ngx-chess-board.service';\nimport { Constants } from './utils/constants';\nimport { PieceIconInput } from './utils/inputs/piece-icon-input';\nimport { PieceIconInputManager } from './utils/inputs/piece-icon-input-manager';\nimport { ColorInput, PieceTypeInput } from './utils/inputs/piece-type-input';\n\n\n@Component({\n    selector: 'ngx-chess-board',\n    templateUrl: './ngx-chess-board.component.html',\n    styleUrls: ['./ngx-chess-board.component.scss'],\n})\nexport class NgxChessBoardComponent\n    implements OnInit, OnChanges, NgxChessBoardView, AfterViewInit {\n\n    @Input() darkTileColor = Constants.DEFAULT_DARK_TILE_COLOR;\n    @Input() lightTileColor: string = Constants.DEFAULT_LIGHT_TILE_COLOR;\n    @Input() showCoords = true;\n    /**\n     * Enabling free mode removes turn-based restriction and allows to move any piece freely!\n     */\n    @Output() moveChange = new EventEmitter<MoveChange>();\n    @Output() checkmate = new EventEmitter<void>();\n    @Output() stalemate = new EventEmitter<void>();\n\n    @ViewChild('boardRef')\n    boardRef: ElementRef;\n    @ViewChild('modal')\n    modal: PiecePromotionModalComponent;\n\n    pieceSize: number;\n    selected = false;\n    boardLoader: BoardLoader;\n    pieceIconManager: PieceIconInputManager;\n\n    engineFacade: AbstractEngineFacade;\n\n    constructor(private ngxChessBoardService: NgxChessBoardService) {\n        this.engineFacade = new EngineFacade(\n            new Board(),\n            this.moveChange\n        );\n    }\n\n    @Input('size')\n    public set size(size: number) {\n        if (\n            size &&\n            size >= Constants.MIN_BOARD_SIZE &&\n            size <= Constants.MAX_BOARD_SIZE\n        ) {\n            this.engineFacade.heightAndWidth = size;\n        } else {\n            this.engineFacade.heightAndWidth = Constants.DEFAULT_SIZE;\n        }\n        this.engineFacade.drawProvider.clear();\n        this.calculatePieceSize();\n    }\n\n    @Input('freeMode')\n    public set freeMode(freeMode: boolean) {\n        this.engineFacade.freeMode = freeMode;\n    }\n\n    @Input('dragDisabled')\n    public set dragDisabled(dragDisabled: boolean) {\n        this.engineFacade.dragDisabled = dragDisabled;\n    }\n\n    @Input('drawDisabled')\n    public set drawDisabled(drawDisabled: boolean) {\n        this.engineFacade.drawDisabled = drawDisabled;\n    }\n\n    @Input('pieceIcons')\n    public set pieceIcons(pieceIcons: PieceIconInput) {\n        this.pieceIconManager.pieceIconInput = pieceIcons;\n    }\n\n    @Input('lightDisabled')\n    public set lightDisabled(lightDisabled: boolean) {\n        this.engineFacade.lightDisabled = lightDisabled;\n    }\n\n    @Input('darkDisabled')\n    public set darkDisabled(darkDisabled: boolean) {\n        this.engineFacade.darkDisabled = darkDisabled;\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onRightClick(event: MouseEvent) {\n        event.preventDefault();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (\n            (changes.lightDisabled &&\n                this.lightDisabled &&\n                this.engineFacade.board.currentWhitePlayer) ||\n            (changes.darkDisabled &&\n                this.darkDisabled &&\n                !this.engineFacade.board.currentWhitePlayer)\n        ) {\n            this.engineFacade.board.possibleCaptures = [];\n            this.engineFacade.board.possibleMoves = [];\n        }\n    }\n\n    ngOnInit() {\n        this.ngxChessBoardService.componentMethodCalled$.subscribe(() => {\n            this.engineFacade.reset();\n        });\n\n    }\n\n    ngAfterViewInit(): void {\n        this.engineFacade.modal = this.modal;\n        this.calculatePieceSize();\n    }\n\n    onMouseUp(event: MouseEvent) {\n        this.engineFacade.onMouseUp(\n            event,\n            this.getClickPoint(event),\n            this.boardRef.nativeElement.getBoundingClientRect().left,\n            this.boardRef.nativeElement.getBoundingClientRect().top\n        );\n    }\n\n    reverse(): void {\n        this.selected = false;\n        this.engineFacade.board.reverse();\n        this.engineFacade.coords.reverse();\n    }\n\n    updateBoard(board: Board) {\n        this.engineFacade.board = board;\n        this.boardLoader.setEngineFacade(this.engineFacade);\n        this.engineFacade.board.possibleCaptures = [];\n        this.engineFacade.board.possibleMoves = [];\n    }\n\n    setFEN(fen: string): void {\n        try {\n            this.engineFacade.boardLoader.setNotationProcessor(\n                NotationProcessorFactory.getProcessor(NotationType.FEN)\n            );\n            this.engineFacade.boardLoader.loadFEN(fen);\n            this.engineFacade.board.possibleCaptures = [];\n            this.engineFacade.board.possibleMoves = [];\n            this.engineFacade.coords.reset();\n        } catch (exception) {\n            this.engineFacade.boardLoader.addPieces();\n        }\n    }\n\n    setPGN(pgn: string): void {\n        try {\n            this.engineFacade.boardLoader.setNotationProcessor(\n                NotationProcessorFactory.getProcessor(NotationType.PGN)\n            );\n            this.engineFacade.boardLoader.loadPGN(pgn);\n            this.engineFacade.board.possibleCaptures = [];\n            this.engineFacade.board.possibleMoves = [];\n            this.engineFacade.coords.reset();\n        } catch (exception) {\n            console.log(exception);\n            this.engineFacade.boardLoader.addPieces();\n        }\n    }\n\n    getFEN(): string {\n        return this.engineFacade.board.fen;\n    }\n\n    dragEnded(event: CdkDragEnd): void {\n        this.engineFacade.dragEndStrategy.process(event);\n    }\n\n    dragStart(event: CdkDragStart): void {\n        this.engineFacade.dragStartStrategy.process(event);\n    }\n\n    onMouseDown(event: MouseEvent) {\n        this.engineFacade.onMouseDown(event, this.getClickPoint(event),\n            this.boardRef.nativeElement.getBoundingClientRect().left,\n            this.boardRef.nativeElement.getBoundingClientRect().top\n        );\n    }\n\n    getClickPoint(event) {\n        return ClickUtils.getClickPoint(\n            event,\n            this.boardRef.nativeElement.getBoundingClientRect().top,\n            this.boardRef.nativeElement.getBoundingClientRect().height,\n            this.boardRef.nativeElement.getBoundingClientRect().left,\n            this.boardRef.nativeElement.getBoundingClientRect().width\n        );\n    }\n\n    private calculatePieceSize() {\n        this.pieceSize = this.engineFacade.heightAndWidth / 10;\n    }\n\n\n    getCustomPieceIcons(piece: Piece) {\n        return JSON.parse(\n            `{ \"background-image\": \"url('${this.engineFacade.pieceIconManager.getPieceIcon(\n                piece\n            )}')\"}`\n        );\n    }\n\n    move(coords: string): void {\n        this.engineFacade.move(coords);\n    }\n\n    getMoveHistory(): HistoryMove[] {\n        return this.engineFacade.getMoveHistory();\n    }\n\n    reset(): void {\n        this.engineFacade.reset();\n    }\n\n    undo(): void {\n        this.engineFacade.undo();\n    }\n\n    addPiece(\n        pieceTypeInput: PieceTypeInput,\n        colorInput: ColorInput,\n        coords: string\n    ) {\n        this.engineFacade.addPiece(pieceTypeInput, colorInput, coords);\n    }\n\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {Piece} from '../../models/pieces/piece';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-piece-promotion-modal',\r\n    templateUrl: './piece-promotion-modal.component.html',\r\n    styleUrls: ['./piece-promotion-modal.component.scss']\r\n})\r\nexport class PiecePromotionModalComponent {\r\n\r\n    @ViewChild('myModal', {static: false}) modal: ElementRef;\r\n\r\n    opened = false;\r\n    private onCloseCallback: (index: number) => void;\r\n\r\n    open(closeCallback: (index: number) => void) {\r\n        this.opened = true;\r\n        this.onCloseCallback = closeCallback;\r\n        this.modal.nativeElement.style.display = 'block';\r\n    }\r\n\r\n    changeSelection(index: number){\r\n        this.modal.nativeElement.style.display = 'none';\r\n        this.opened = false;\r\n        this.onCloseCallback(index);\r\n    }\r\n\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgxChessBoardComponent } from './ngx-chess-board.component';\r\nimport { PiecePromotionModalComponent } from './piece-promotion/piece-promotion-modal/piece-promotion-modal.component';\r\nimport { NgxChessBoardService } from './service/ngx-chess-board.service';\r\n\r\n@NgModule({\r\n    declarations: [NgxChessBoardComponent, PiecePromotionModalComponent],\r\n    imports: [CommonModule, DragDropModule],\r\n    exports: [NgxChessBoardComponent],\r\n})\r\nexport class NgxChessBoardModule {\r\n    static forRoot(): ModuleWithProviders<NgxChessBoardModule> {\r\n        return {\r\n            ngModule: NgxChessBoardModule,\r\n            providers: [NgxChessBoardService],\r\n        };\r\n    }\r\n}\r\n","/*\n * Public API Surface of ngx-chess-board\n */\n\nexport * from './lib/ngx-chess-board.module';\nexport * from './lib/history-move-provider/history-move';\nexport * from './lib/utils/inputs/piece-icon-input';\n\nexport * from './lib/ngx-chess-board.component';\nexport * from './lib/piece-promotion/piece-promotion-modal/piece-promotion-modal.component';\n\nexport * from './lib/ngx-chess-board-view';\nexport * from './lib/service/ngx-chess-board.service';\nexport * from './lib/service/ngx-chess-board.service';\nexport * from './lib/engine/move-change/move-change'\n\n/*\n * Public API Surface of im-grid\n */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["BehaviorSubject","cloneDeep","Subject","Injectable","EventEmitter","Component","Input","Output","ViewChild","HostListener","NgModule","CommonModule","DragDropModule"],"mappings":"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"}