import { MoveUtils } from '../utils/move-utils';
import { PieceAbstractDecorator } from './piece-abstract-decorator';
export class AvailableMoveDecorator extends PieceAbstractDecorator {
    constructor(piece, pointClicked, color, board) {
        super(piece);
        this.pointClicked = pointClicked;
        this.color = color;
        this.board = board;
    }
    getPossibleCaptures() {
        return this.piece
            .getPossibleCaptures()
            .filter((point) => !MoveUtils.willMoveCauseCheck(this.color, this.pointClicked.row, this.pointClicked.col, point.row, point.col, this.board));
    }
    getPossibleMoves() {
        return this.piece
            .getPossibleMoves()
            .filter((point) => !MoveUtils.willMoveCauseCheck(this.color, this.pointClicked.row, this.pointClicked.col, point.row, point.col, this.board));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhaWxhYmxlLW1vdmUtZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL0tvbXB1dGVyL0Rlc2t0b3AvTm93eSBmb2xkZXIvY2hlc3MtYm9hcmQvcHJvamVjdHMvbmd4LWNoZXNzLWJvYXJkL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9waWVjZS1kZWNvcmF0b3IvYXZhaWxhYmxlLW1vdmUtZGVjb3JhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVoRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVwRSxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsc0JBQXNCO0lBSzlELFlBQVksS0FBb0IsRUFBRSxZQUFtQixFQUFFLEtBQVksRUFBRSxLQUFZO1FBQzdFLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxtQkFBbUI7UUFDZixPQUFPLElBQUksQ0FBQyxLQUFLO2FBQ1osbUJBQW1CLEVBQUU7YUFDckIsTUFBTSxDQUNILENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FDTixDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FDekIsSUFBSSxDQUFDLEtBQUssRUFDVixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQ3JCLEtBQUssQ0FBQyxHQUFHLEVBQ1QsS0FBSyxDQUFDLEdBQUcsRUFDVCxJQUFJLENBQUMsS0FBSyxDQUNiLENBQ1IsQ0FBQztJQUNWLENBQUM7SUFFRCxnQkFBZ0I7UUFDWixPQUFPLElBQUksQ0FBQyxLQUFLO2FBQ1osZ0JBQWdCLEVBQUU7YUFDbEIsTUFBTSxDQUNILENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FDTixDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FDekIsSUFBSSxDQUFDLEtBQUssRUFDVixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQ3JCLEtBQUssQ0FBQyxHQUFHLEVBQ1QsS0FBSyxDQUFDLEdBQUcsRUFDVCxJQUFJLENBQUMsS0FBSyxDQUNiLENBQ1IsQ0FBQztJQUNWLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvYXJkIH0gZnJvbSAnLi4vbW9kZWxzL2JvYXJkJztcclxuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICcuLi9tb2RlbHMvcGllY2VzL2NvbG9yJztcclxuaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLi9tb2RlbHMvcGllY2VzL3BvaW50JztcclxuaW1wb3J0IHsgTW92ZVV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvbW92ZS11dGlscyc7XHJcbmltcG9ydCB7IEFic3RyYWN0UGllY2UgfSBmcm9tICcuL2Fic3RyYWN0LXBpZWNlJztcclxuaW1wb3J0IHsgUGllY2VBYnN0cmFjdERlY29yYXRvciB9IGZyb20gJy4vcGllY2UtYWJzdHJhY3QtZGVjb3JhdG9yJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBdmFpbGFibGVNb3ZlRGVjb3JhdG9yIGV4dGVuZHMgUGllY2VBYnN0cmFjdERlY29yYXRvciB7XHJcbiAgICBwcml2YXRlIHBvaW50Q2xpY2tlZDogUG9pbnQ7XHJcbiAgICBwcml2YXRlIGNvbG9yOiBDb2xvcjtcclxuICAgIHByaXZhdGUgYm9hcmQ6IEJvYXJkO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHBpZWNlOiBBYnN0cmFjdFBpZWNlLCBwb2ludENsaWNrZWQ6IFBvaW50LCBjb2xvcjogQ29sb3IsIGJvYXJkOiBCb2FyZCkge1xyXG4gICAgICAgIHN1cGVyKHBpZWNlKTtcclxuICAgICAgICB0aGlzLnBvaW50Q2xpY2tlZCA9IHBvaW50Q2xpY2tlZDtcclxuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XHJcbiAgICAgICAgdGhpcy5ib2FyZCA9IGJvYXJkO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFBvc3NpYmxlQ2FwdHVyZXMoKTogUG9pbnRbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucGllY2VcclxuICAgICAgICAgICAgLmdldFBvc3NpYmxlQ2FwdHVyZXMoKVxyXG4gICAgICAgICAgICAuZmlsdGVyKFxyXG4gICAgICAgICAgICAgICAgKHBvaW50KSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICFNb3ZlVXRpbHMud2lsbE1vdmVDYXVzZUNoZWNrKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbG9yLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvaW50Q2xpY2tlZC5yb3csXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9pbnRDbGlja2VkLmNvbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnQucm93LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludC5jb2wsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYm9hcmRcclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UG9zc2libGVNb3ZlcygpOiBQb2ludFtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5waWVjZVxyXG4gICAgICAgICAgICAuZ2V0UG9zc2libGVNb3ZlcygpXHJcbiAgICAgICAgICAgIC5maWx0ZXIoXHJcbiAgICAgICAgICAgICAgICAocG9pbnQpID0+XHJcbiAgICAgICAgICAgICAgICAgICAgIU1vdmVVdGlscy53aWxsTW92ZUNhdXNlQ2hlY2soXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29sb3IsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9pbnRDbGlja2VkLnJvdyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wb2ludENsaWNrZWQuY29sLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludC5yb3csXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50LmNvbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ib2FyZFxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG4iXX0=