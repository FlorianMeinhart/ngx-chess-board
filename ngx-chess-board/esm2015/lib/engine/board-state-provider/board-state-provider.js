import { BehaviorSubject } from 'rxjs';
export class BoardStateProvider {
    constructor() {
        this.statesSubject$ = new BehaviorSubject([]);
    }
    get states() {
        return this.statesSubject$.value;
    }
    set states(states) {
        this.statesSubject$.next(states);
    }
    addMove(state) {
        this.states = [...this.states, state];
    }
    getStates() {
        return this.states;
    }
    pop() {
        const lastState = this.getLastState();
        this.states = this.states.filter((state) => state !== lastState);
        return lastState;
    }
    isEmpty() {
        return this.states.length === 0;
    }
    clear() {
        this.states = [];
    }
    getLastState() {
        return this.states[this.getLastStateIndex()];
    }
    getLastStateIndex() {
        return this.states.length - 1;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9hcmQtc3RhdGUtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvS29tcHV0ZXIvRGVza3RvcC9Ob3d5IGZvbGRlci9jaGVzcy1ib2FyZC9wcm9qZWN0cy9uZ3gtY2hlc3MtYm9hcmQvc3JjLyIsInNvdXJjZXMiOlsibGliL2VuZ2luZS9ib2FyZC1zdGF0ZS1wcm92aWRlci9ib2FyZC1zdGF0ZS1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3ZDLE1BQU0sT0FBTyxrQkFBa0I7SUFBL0I7UUFDSSxtQkFBYyxHQUFHLElBQUksZUFBZSxDQUFlLEVBQUUsQ0FBQyxDQUFDO0lBdUMzRCxDQUFDO0lBckNHLElBQUksTUFBTTtRQUNOLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUM7SUFDckMsQ0FBQztJQUVELElBQUksTUFBTSxDQUFDLE1BQW9CO1FBQzNCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxPQUFPLENBQUMsS0FBaUI7UUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsU0FBUztRQUNMLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRUQsR0FBRztRQUNDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUM7UUFDakUsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUVELE9BQU87UUFDSCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsS0FBSztRQUNELElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxZQUFZO1FBQ1IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELGlCQUFpQjtRQUNiLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBCb2FyZFN0YXRlIH0gZnJvbSAnLi9ib2FyZC1zdGF0ZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQm9hcmRTdGF0ZVByb3ZpZGVyIHtcclxuICAgIHN0YXRlc1N1YmplY3QkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxCb2FyZFN0YXRlW10+KFtdKTtcclxuXHJcbiAgICBnZXQgc3RhdGVzKCk6IEJvYXJkU3RhdGVbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGVzU3ViamVjdCQudmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHN0YXRlcyhzdGF0ZXM6IEJvYXJkU3RhdGVbXSkge1xyXG4gICAgICAgIHRoaXMuc3RhdGVzU3ViamVjdCQubmV4dChzdGF0ZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZE1vdmUoc3RhdGU6IEJvYXJkU3RhdGUpIHtcclxuICAgICAgICB0aGlzLnN0YXRlcyA9IFsuLi50aGlzLnN0YXRlcywgc3RhdGVdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFN0YXRlcygpOiBCb2FyZFN0YXRlW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlcztcclxuICAgIH1cclxuXHJcbiAgICBwb3AoKTogQm9hcmRTdGF0ZSB7XHJcbiAgICAgICAgY29uc3QgbGFzdFN0YXRlID0gdGhpcy5nZXRMYXN0U3RhdGUoKTtcclxuICAgICAgICB0aGlzLnN0YXRlcyA9IHRoaXMuc3RhdGVzLmZpbHRlcigoc3RhdGUpID0+IHN0YXRlICE9PSBsYXN0U3RhdGUpO1xyXG4gICAgICAgIHJldHVybiBsYXN0U3RhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgaXNFbXB0eSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZXMubGVuZ3RoID09PSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyKCkge1xyXG4gICAgICAgIHRoaXMuc3RhdGVzID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TGFzdFN0YXRlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlc1t0aGlzLmdldExhc3RTdGF0ZUluZGV4KCldO1xyXG4gICAgfVxyXG5cclxuICAgIGdldExhc3RTdGF0ZUluZGV4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGVzLmxlbmd0aCAtIDE7XHJcbiAgICB9XHJcbn1cclxuIl19